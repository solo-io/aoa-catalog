apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gloo-platform-helm
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
  project: default
  source:
    chart: gloo-platform
    helm:
      skipCrds: true
      values: |
        common:
            addonNamespace: "gloo-mesh-addons"
            adminNamespace: "gloo-mesh"
            cluster: mgmt
        glooInsightsEngine:
            enabled: false
        global: {}
        glooAgent:
            enabled: true
            relay:
                serverAddress: gloo-mesh-mgmt-server:9900
                clientTlsSecret:
                    name: gloo-agent-tls-cert
                    namespace: gloo-mesh
                # required to set to null in 2.4.x if providing server and client tls certificates
                tokenSecret:
                  key: null
                  name: null
                  namespace: null
        glooMgmtServer:
            enabled: true
            relay:
                disableCa: true
                disableCaCertGeneration: true
                disableTokenGeneration: true
                tlsSecret:
                    name: gloo-server-tls-cert
            serviceType: LoadBalancer
        glooUi:
            auth:
                backend: oidc
                enabled: false
                oidc:
                    appUrl: https://gmui.glootest.com/gmui
                    clientId: 0oa5zoq0xoGKtOSpg5d7
                    clientSecret: _MS9PJ52NpUJo8Hj2nE4zj90hX4BFkW61SdaXJfE
                    clientSecretName: dashboard
                    issuerUrl: https://dev-22653158.okta.com/oauth2/default
            deploymentOverrides:
                spec:
                    template:
                        metadata:
                            annotations:
                                proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
                            labels:
                                istio.io/rev: 1-20
                                sidecar.istio.io/inject: "true"
            enabled: true
            serviceType: ClusterIP
        extAuthService:
            enabled: true
            extAuth:
                image:
                    registry: gcr.io/gloo-mesh
        rateLimiter:
            enabled: true
            rateLimiter:
                image:
                    registry: gcr.io/gloo-mesh
        legacyMetricsPipeline:
            enabled: false
        licensing:
            licenseSecretName: "gloo-license"
        prometheus:
            enabled: true
        redis:
            deployment:
                enabled: true
        telemetryGateway:
            enabled: true
            image:
              pullPolicy: IfNotPresent
              repository: DOCKER_REPO/gloo-otel-collector
              tag: TARGET_REVISION
        telemetryGatewayCustomization:
            disableCertGeneration: true
        telemetryCollector:
            enabled: true
            # uncomment to use deployment mode instead of daemonset
            #replicaCount: 1
            #mode: deployment
            #service: 
            #    type: ClusterIP
            #podLabels:
            #    istio.io/rev: 1-20
            #podAnnotations:
            #    proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
            image:
              pullPolicy: IfNotPresent
              repository: DOCKER_REPO/gloo-otel-collector
              tag: TARGET_REVISION
            config:
                exporters:
                    otlp:
                        endpoint: "gloo-telemetry-gateway.gloo-mesh.svc.cluster.local:4317"
            extraVolumes:
                - name: root-ca
                  secret:
                    defaultMode: 420
                    secretName: gloo-telemetry-gateway-tls-secret
                - configMap:
                    items:
                        - key: relay
                          path: relay.yaml
                    name: gloo-telemetry-collector-config
                  name: telemetry-configmap
                - hostPath:
                      path: /var/run/cilium
                      type: DirectoryOrCreate
                  name: cilium-run
        
    repoURL: HELM_REPO
    targetRevision: TARGET_REVISION
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  # ignore the self-signed certs that are being generated automatically    
  ignoreDifferences:
  - group: v1
    kind: Secret