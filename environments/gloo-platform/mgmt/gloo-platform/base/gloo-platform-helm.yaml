apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gloo-platform-helm
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
  project: default
  source:
    chart: gloo-platform
    helm:
      skipCrds: true
      values: |
        common:
            addonNamespace: "gloo-mesh-addons"
            adminNamespace: "gloo-mesh"
            cluster: mgmt
        global: {}
        glooAgent:
            enabled: true
            relay:
                serverAddress: gloo-mesh-mgmt-server:9900
                clientTlsSecret:
                    name: gloo-agent-tls-cert
                    namespace: gloo-mesh
                rootTlsSecret:
                    name: relay-root-ca
                    namespace: gloo-mesh
                tokenSecret:
                    name: relay-identity-token-secret
                    namespace: "gloo-mesh"
        glooMgmtServer:
            enabled: true
            relay:
                disableCa: true
                disableCaCertGeneration: true
                disableTokenGeneration: true
                tlsSecret:
                    name: gloo-server-tls-cert
            serviceType: LoadBalancer
        glooUi:
            #image:
            #    pullPolicy: IfNotPresent
            #    registry: gcr.io/gloo-mesh
            #    repository: gloo-mesh-apiserver
            #    tag: 2.4.4
            #sidecars:
            #    console:
            #        image:
            #            registry: gcr.io/gloo-mesh
            #            repository: gloo-mesh-ui
            #            tag: 2.4.4
            #    envoy:
            #        image:
            #            registry: gcr.io/gloo-mesh
            #            repository: gloo-mesh-envoy
            #            tag: 2.4.4
            deploymentOverrides:
                spec:
                    template:
                        metadata:
                            annotations:
                                proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
                            labels:
                                istio.io/rev: 1-18
                                sidecar.istio.io/inject: "true"
                        spec:
                            nodeSelector:
                                gke-spot: "true"
                            tolerations:
                                - key: cloud.google.com/gke-spot
                                  operator: Equal
                                  value: "true"
                                  effect: NoSchedule  
            enabled: true
            serviceType: ClusterIP
            resources:
                requests:
                    cpu: 125m
                    memory: 256Mi
        extAuthService:
            enabled: true
            extAuth:
                apiKeyStorage:
                    enabled: true
                    # Use the local gloo-mesh-addons Redis for backing storage
                    name: redis
                    config:
                      connection:
                        host: "redis.gloo-mesh-addons:6379"
                        # Set to 0 to match the default database for the 'glooPortalServer.apiKeyStorage' configuration
                        db: 0
                    # Replace with a random string to use to generate hash values for other keys
                    secretKey: "xyz987"
        rateLimiter:
            enabled: true
        glooPortalServer:
            enabled: true
            apiKeyStorage:
                secretKey: xyz987
                type: redis
                redis:
                    address: redis.gloo-mesh-addons:6379
                    enabled: true
            resources:
                requests:
                    cpu: 50m
                    memory: 128Mi
        legacyMetricsPipeline:
            enabled: false
        licensing:
            licenseSecretName: "gloo-license"
        prometheus:
            enabled: true
        redis:
            deployment:
                enabled: true
        telemetryGateway:
            enabled: true
            resources:
                requests:
                    cpu: 300m
                    memory: 1Gi
                limits:
                    cpu: 1
                    memory: 2Gi
            #podLabels:
            #    istio.io/rev: 1-18
            #podAnnotations:
            #    proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
            #image:
            #  pullPolicy: IfNotPresent
            #  repository: gcr.io/gloo-mesh/gloo-otel-collector
            #  tag: 2.4.4
        telemetryGatewayCustomization:
            disableCertGeneration: true
        telemetryCollector:
            enabled: true
            # uncomment to use telemetryCollector in Deployment mode
            #replicaCount: 1
            #mode: deployment
            #service: 
            #    type: ClusterIP
            # uncomment to add sidecar
            podLabels:
                istio.io/rev: 1-18
            podAnnotations:
                proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
            #image:
            #  pullPolicy: IfNotPresent
            #  repository: gcr.io/gloo-mesh/gloo-otel-collector
            #  tag: 2.4.4
            config:
                exporters:
                    otlp:
                        endpoint: "gloo-telemetry-gateway.gloo-mesh.svc.cluster.local:4317"
            resources:
                limits:
                    cpu: 1
                    memory: 2Gi
                requests:
                    cpu: 200m
                    memory: 1Gi
            extraVolumes:
                - name: root-ca
                  secret:
                    defaultMode: 420
                    secretName: gloo-telemetry-gateway-tls-secret
                - configMap:
                    items:
                        - key: relay
                          path: relay.yaml
                    name: gloo-telemetry-collector-config
                  name: telemetry-configmap
                - hostPath:
                    path: /var/run/cilium
                    type: DirectoryOrCreate
                  name: cilium-run
        
        #telemetryCollectorCustomization:
        #    extraProcessors:
        #        batch/istiod:
        #            send_batch_size: 10000
        #            timeout: 10s
        #        filter/istiod:
        #            metrics:
        #                include:
        #                    match_type: regexp
        #                    metric_names:
        #                      - "pilot.*"
        #                      - "process.*"
        #                      - "go.*"
        #                      - "container.*"
        #                      - "envoy.*"
        #                      - "galley.*"
        #                      - "sidecar.*"
        #                      - "istio_build.*"
        #    extraReceivers:
        #        zipkin/gloo-mesh:
        #            endpoint: 0.0.0.0:9411
        #        otlp/gloo-mesh:
        #          protocols:
        #            grpc:
        #              endpoint: 0.0.0.0:4317
        #            http:
        #              endpoint: 0.0.0.0:4318
            #extraProcessors:
            #    batch/istiod:
            #        send_batch_size: 10000
            #        timeout: 10s
            #    filter/istiod:
            #        metrics:
            #            include:
            #                match_type: regexp
            #                metric_names:
            #                    - ".*proxy_latency.*"

    repoURL: https://storage.googleapis.com/gloo-platform/helm-charts
    targetRevision: 2.4.4
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  # ignore the self-signed certs that are being generated automatically    
  ignoreDifferences:
  - group: v1
    kind: Secret