apiVersion: admin.gloo.solo.io/v2
kind: RateLimitServerConfig
metadata:
  name: httpbin-rl-server-cfg
  namespace: httpbin
spec:
  destinationServers:
  - port:
      name: grpc
    ref:
      cluster: cluster1
      name: rate-limiter
      namespace: gloo-mesh-addons
  raw:
    setDescriptors:
      - simpleDescriptors:
          - key: userId
          - key: usagePlan
            value: bronze
        rateLimit:
          requestsPerUnit: 1
          unit: MINUTE
      - simpleDescriptors:
          - key: userId
          - key: usagePlan
            value: silver
        rateLimit:
          requestsPerUnit: 3
          unit: MINUTE
      - simpleDescriptors:
          - key: userId
          - key: usagePlan
            value: gold
        rateLimit:
          requestsPerUnit: 5
          unit: MINUTE
---
apiVersion: trafficcontrol.policy.gloo.solo.io/v2
kind: RateLimitClientConfig
metadata:
  name: httpbin-rl-client-cfg
  namespace: httpbin
spec:
  raw:
    rateLimits:
      - setActions:
          - requestHeaders:
              descriptorKey: usagePlan
              headerName: x-solo-plan
          - metadata:
              descriptorKey: userId
              metadataKey:
                key: envoy.filters.http.ext_authz
                path:
                  - key: userId

# Uncomment this to use access token validation or OIDC
#apiVersion: trafficcontrol.policy.gloo.solo.io/v2
#kind: RateLimitClientConfig
#metadata:
#  name: usage-plans
#  namespace: gloo-mesh-addons
#spec:
#  raw:
#    rateLimits:
#    - setActions:
#      - metadata:
#          descriptorKey: usagePlan
#          metadataKey:
#            key: envoy.filters.http.ext_authz
#            path:
#              - key: usagePlan
#      - metadata:
#          descriptorKey: userId
#          metadataKey:
#            key: envoy.filters.http.ext_authz
#            path:
#              - key: userId