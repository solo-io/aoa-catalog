apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gloo-mesh-enterprise-helm
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
  project: default
  source:
    chart: gloo-mesh-enterprise
    helm:
      skipCrds: true
      values: |
        licenseSecretName: gloo-mesh-license
        global:
          cluster: mgmt
        mgmtClusterName: mgmt
        glooMeshMgmtServer:
          serviceType: LoadBalancer
          relay:
            disableCa: true
            disableCaCertGeneration: true
            disableTokenGeneration: true
            tlsSecret:
              name: gloo-server-tls-cert
          ports:
            healthcheck: 8091
        glooMeshUi:
          serviceType: ClusterIP
          enabled: true
          auth:
            enabled: false
            backend: oidc
            oidc: 
              # From the OIDC provider
              clientId: "0oa5zoq0xoGKtOSpg5d7"
              # From the OIDC provider. To be base64 encoded and stored as a kubernetes secret.
              clientSecret: "_MS9PJ52NpUJo8Hj2nE4zj90hX4BFkW61SdaXJfE"
              # Name for generated secret
              clientSecretName: dashboard
              # The issuer URL from the OIDC provider, usually something like 'https://<domain>.<provider_url>/'.
              issuerUrl: https://dev-22653158.okta.com/oauth2/default
              # The URL that the UI for the OIDC app is available at, from the DNS and other ingress settings that expose the OIDC app UI service.
              appUrl: "https://gmui-local.glootest.com/gmui"
          deploymentOverrides:
            spec:
              template:
                metadata:
                  annotations:
                    proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
                  labels:
                    istio.io/rev: "1-16"
                    sidecar.istio.io/inject: "true"
        legacyMetricsPipeline:
          enabled: false
        metricsgateway:
          enabled: true
          #resources:
          #  requests:
          #    cpu: 300m
          #    memory: "1Gi"
          #  limits: 
          #    cpu: 600m
          #    memory: "2Gi"
        metricsgatewayCustomization:
          disableCertGeneration: true
          extraReceivers:
            prometheus/gloo-mgmt:
              config:
                scrape_configs:
                - job_name: gloo-mesh-mgmt-server-otel
                  honor_labels: true
                  kubernetes_sd_configs:
                  - namespaces:
                      names:
                      - gloo-mesh
                    role: pod
                  relabel_configs:
                  - action: keep
                    regex: gloo-mesh-mgmt-server|gloo-mesh-ui
                    source_labels:
                    - __meta_kubernetes_pod_label_app
                  - action: keep
                    regex: true
                    source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                  - action: drop
                    regex: true
                    source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
                  - action: replace
                    regex: (https?)
                    source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                    target_label: __scheme__
                  - action: replace
                    regex: (.+)
                    source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_path
                    target_label: __metrics_path__
                  - action: replace
                    regex: ([^:]+)(?::\d+)?;(\d+)
                    replacement: $$1:$$2
                    source_labels:
                    - __address__
                    - __meta_kubernetes_pod_annotation_prometheus_io_port
                    target_label: __address__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                    replacement: __param_$$1
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - action: replace
                    source_labels:
                    - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                    - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: drop
                    regex: Pending|Succeeded|Failed|Completed
                    source_labels:
                    - __meta_kubernetes_pod_phase
          extraPipelines:
            metrics/gloo-mgmt:
              receivers:
              - prometheus/gloo-mgmt # Prometheus scrape config for mgmt-server
              processors:
              - memory_limiter
              - batch
              exporters:
              - prometheus # Prometheus deployed by Gloo.
        
    repoURL: https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-enterprise
    targetRevision: 2.2.4
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  # ignore the self-signed certs that are being generated automatically    
  ignoreDifferences:
  - group: v1
    kind: Secret