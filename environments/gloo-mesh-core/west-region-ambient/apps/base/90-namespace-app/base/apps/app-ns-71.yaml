
apiVersion: v1
kind: Namespace
metadata:
  name: ns-71
  labels:
    seed: "1695851827348614000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: late-firefly
  namespace: ns-71
  labels:
    app: late-firefly
    tier: "1"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: late-firefly
  namespace: ns-71
  labels:
    app: late-firefly
    tier: "1"
    seed: "1695851827348614000"
spec:
  selector:
    app: late-firefly
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: late-firefly-v1
  namespace: ns-71
  labels:
    app: late-firefly
    version: v1
    tier: "1"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: late-firefly
        version: v1
  template:
    metadata:
      labels:
        app: late-firefly
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: late-firefly
      containers:
      - name: late-firefly
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "late-firefly-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From late-firefly (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://muddy-grass.ns-71.svc.cluster.local.:8080,http://icy-wood.ns-22.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: muddy-grass
  namespace: ns-71
  labels:
    app: muddy-grass
    tier: "2"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: muddy-grass
  namespace: ns-71
  labels:
    app: muddy-grass
    tier: "2"
    seed: "1695851827348614000"
spec:
  selector:
    app: muddy-grass
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: muddy-grass-v1
  namespace: ns-71
  labels:
    app: muddy-grass
    version: v1
    tier: "2"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: muddy-grass
        version: v1
  template:
    metadata:
      labels:
        app: muddy-grass
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: muddy-grass
      containers:
      - name: muddy-grass
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "muddy-grass-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From muddy-grass (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://old-paper.ns-71.svc.cluster.local.:8080,http://purple-moon.ns-71.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: old-paper
  namespace: ns-71
  labels:
    app: old-paper
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: old-paper
  namespace: ns-71
  labels:
    app: old-paper
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: old-paper
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: old-paper-v1
  namespace: ns-71
  labels:
    app: old-paper
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: old-paper
        version: v1
  template:
    metadata:
      labels:
        app: old-paper
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: old-paper
      containers:
      - name: old-paper
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "old-paper-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From old-paper (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-moon
  namespace: ns-71
  labels:
    app: purple-moon
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-moon
  namespace: ns-71
  labels:
    app: purple-moon
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: purple-moon
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-moon-v1
  namespace: ns-71
  labels:
    app: purple-moon
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-moon
        version: v1
  template:
    metadata:
      labels:
        app: purple-moon
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-moon
      containers:
      - name: purple-moon
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-moon-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-moon (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://wandering-pond.ns-71.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wandering-pond
  namespace: ns-71
  labels:
    app: wandering-pond
    tier: "4"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: wandering-pond
  namespace: ns-71
  labels:
    app: wandering-pond
    tier: "4"
    seed: "1695851827348614000"
spec:
  selector:
    app: wandering-pond
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wandering-pond-v1
  namespace: ns-71
  labels:
    app: wandering-pond
    version: v1
    tier: "4"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wandering-pond
        version: v1
  template:
    metadata:
      labels:
        app: wandering-pond
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wandering-pond
      containers:
      - name: wandering-pond
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wandering-pond-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wandering-pond (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---