apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-ingressgateway
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  project: default
  source:
    chart: gateway
    repoURL: https://istio-release.storage.googleapis.com/charts
    targetRevision: 1.20.2
    helm:
      values: |
        # Name allows overriding the release name. Generally this should not be set
        name: ""
        # revision declares which revision this gateway is a part of
        revision: ""
        
        service:
          # Type of service. Set to "None" to disable the service entirely
          type: LoadBalancer
          ports:
          - name: http2
            port: 80
            protocol: TCP
            targetPort: 80
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
          annotations:
            # AWS NLB Annotation
            service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          loadBalancerIP: ""
          loadBalancerSourceRanges: []
          externalTrafficPolicy: ""
        
        # Pod environment variables
        env: {}
        
        # Pod annotations
        annotations: {}
        
        # Labels to apply to all resources
        labels:
          istio: ingressgateway

        # node selector
        nodeSelector:
          node: "gateway"

        # tolerations
        tolerations:
          - key: cloud.google.com/node
            operator: Equal
            value: "gateway"
            effect: NoSchedule

        # resources
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 1024Mi

        # hpa configuration
        autoscaling:
          enabled: true
          minReplicas: 2
          maxReplicas: 5
          targetCPUUtilizationPercentage: 80

        # topology spread constraints
        topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              istio: ingressgateway
        
        # affinity
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm: 
                labelSelector:
                  matchLabels:
                    istio: ingressgateway
                topologyKey: "kubernetes.io/host"
              weight: 100
  syncPolicy:
    automated:
      prune: true
      selfHeal: true