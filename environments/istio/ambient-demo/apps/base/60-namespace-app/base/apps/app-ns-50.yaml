
apiVersion: v1
kind: Namespace
metadata:
  name: ns-50
  labels:
    seed: "1695849434450986000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cool-cherry
  namespace: ns-50
  labels:
    app: cool-cherry
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: cool-cherry
  namespace: ns-50
  labels:
    app: cool-cherry
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: cool-cherry
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cool-cherry-v1
  namespace: ns-50
  labels:
    app: cool-cherry
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cool-cherry
        version: v1
  template:
    metadata:
      labels:
        app: cool-cherry
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cool-cherry
      containers:
      - name: cool-cherry
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cool-cherry-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cool-cherry (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://muddy-cherry.ns-16.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cool-wave
  namespace: ns-50
  labels:
    app: cool-wave
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: cool-wave
  namespace: ns-50
  labels:
    app: cool-wave
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: cool-wave
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cool-wave-v1
  namespace: ns-50
  labels:
    app: cool-wave
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cool-wave
        version: v1
  template:
    metadata:
      labels:
        app: cool-wave
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cool-wave
      containers:
      - name: cool-wave
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cool-wave-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cool-wave (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://restless-bush.ns-50.svc.cluster.local.:8080,http://quiet-sun.ns-50.svc.cluster.local.:8080,http://icy-dust.ns-28.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: empty-wildflower
  namespace: ns-50
  labels:
    app: empty-wildflower
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: empty-wildflower
  namespace: ns-50
  labels:
    app: empty-wildflower
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: empty-wildflower
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: empty-wildflower-v1
  namespace: ns-50
  labels:
    app: empty-wildflower
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: empty-wildflower
        version: v1
  template:
    metadata:
      labels:
        app: empty-wildflower
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: empty-wildflower
      containers:
      - name: empty-wildflower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "empty-wildflower-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From empty-wildflower (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: floral-sea
  namespace: ns-50
  labels:
    app: floral-sea
    tier: "1"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: floral-sea
  namespace: ns-50
  labels:
    app: floral-sea
    tier: "1"
    seed: "1695849434450986000"
spec:
  selector:
    app: floral-sea
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: floral-sea-v1
  namespace: ns-50
  labels:
    app: floral-sea
    version: v1
    tier: "1"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: floral-sea
        version: v1
  template:
    metadata:
      labels:
        app: floral-sea
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: floral-sea
      containers:
      - name: floral-sea
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "floral-sea-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From floral-sea (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://polished-frost.ns-50.svc.cluster.local.:8080,http://empty-wildflower.ns-50.svc.cluster.local.:8080,http://purple-bush.ns-50.svc.cluster.local.:8080,http://wispy-snow.ns-8.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hidden-cherry
  namespace: ns-50
  labels:
    app: hidden-cherry
    tier: "5"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: hidden-cherry
  namespace: ns-50
  labels:
    app: hidden-cherry
    tier: "5"
    seed: "1695849434450986000"
spec:
  selector:
    app: hidden-cherry
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hidden-cherry-v1
  namespace: ns-50
  labels:
    app: hidden-cherry
    version: v1
    tier: "5"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: hidden-cherry
        version: v1
  template:
    metadata:
      labels:
        app: hidden-cherry
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: hidden-cherry
      containers:
      - name: hidden-cherry
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "hidden-cherry-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From hidden-cherry (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polished-frost
  namespace: ns-50
  labels:
    app: polished-frost
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: polished-frost
  namespace: ns-50
  labels:
    app: polished-frost
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: polished-frost
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polished-frost-v1
  namespace: ns-50
  labels:
    app: polished-frost
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: polished-frost
        version: v1
  template:
    metadata:
      labels:
        app: polished-frost
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: polished-frost
      containers:
      - name: polished-frost
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "polished-frost-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From polished-frost (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://restless-pond.ns-50.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-bush
  namespace: ns-50
  labels:
    app: purple-bush
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-bush
  namespace: ns-50
  labels:
    app: purple-bush
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: purple-bush
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-bush-v1
  namespace: ns-50
  labels:
    app: purple-bush
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-bush
        version: v1
  template:
    metadata:
      labels:
        app: purple-bush
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-bush
      containers:
      - name: purple-bush
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-bush-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-bush (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://cool-cherry.ns-50.svc.cluster.local.:8080,http://cool-wave.ns-50.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quiet-sun
  namespace: ns-50
  labels:
    app: quiet-sun
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: quiet-sun
  namespace: ns-50
  labels:
    app: quiet-sun
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: quiet-sun
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiet-sun-v1
  namespace: ns-50
  labels:
    app: quiet-sun
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: quiet-sun
        version: v1
  template:
    metadata:
      labels:
        app: quiet-sun
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: quiet-sun
      containers:
      - name: quiet-sun
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "quiet-sun-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From quiet-sun (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: restless-bush
  namespace: ns-50
  labels:
    app: restless-bush
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: restless-bush
  namespace: ns-50
  labels:
    app: restless-bush
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: restless-bush
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restless-bush-v1
  namespace: ns-50
  labels:
    app: restless-bush
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: restless-bush
        version: v1
  template:
    metadata:
      labels:
        app: restless-bush
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: restless-bush
      containers:
      - name: restless-bush
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "restless-bush-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From restless-bush (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: restless-pond
  namespace: ns-50
  labels:
    app: restless-pond
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: restless-pond
  namespace: ns-50
  labels:
    app: restless-pond
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: restless-pond
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restless-pond-v1
  namespace: ns-50
  labels:
    app: restless-pond
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: restless-pond
        version: v1
  template:
    metadata:
      labels:
        app: restless-pond
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: restless-pond
      containers:
      - name: restless-pond
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "restless-pond-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From restless-pond (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: summer-frog
  namespace: ns-50
  labels:
    app: summer-frog
    tier: "5"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: summer-frog
  namespace: ns-50
  labels:
    app: summer-frog
    tier: "5"
    seed: "1695849434450986000"
spec:
  selector:
    app: summer-frog
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: summer-frog-v1
  namespace: ns-50
  labels:
    app: summer-frog
    version: v1
    tier: "5"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: summer-frog
        version: v1
  template:
    metadata:
      labels:
        app: summer-frog
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: summer-frog
      containers:
      - name: summer-frog
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "summer-frog-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From summer-frog (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---