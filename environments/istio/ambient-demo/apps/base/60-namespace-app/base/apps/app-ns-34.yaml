
apiVersion: v1
kind: Namespace
metadata:
  name: ns-34
  labels:
    seed: "1695849434450986000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ancient-wildflower
  namespace: ns-34
  labels:
    app: ancient-wildflower
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: ancient-wildflower
  namespace: ns-34
  labels:
    app: ancient-wildflower
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: ancient-wildflower
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ancient-wildflower-v1
  namespace: ns-34
  labels:
    app: ancient-wildflower
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: ancient-wildflower
        version: v1
  template:
    metadata:
      labels:
        app: ancient-wildflower
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: ancient-wildflower
      containers:
      - name: ancient-wildflower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "ancient-wildflower-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From ancient-wildflower (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: billowing-cherry
  namespace: ns-34
  labels:
    app: billowing-cherry
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: billowing-cherry
  namespace: ns-34
  labels:
    app: billowing-cherry
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: billowing-cherry
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billowing-cherry-v1
  namespace: ns-34
  labels:
    app: billowing-cherry
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: billowing-cherry
        version: v1
  template:
    metadata:
      labels:
        app: billowing-cherry
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: billowing-cherry
      containers:
      - name: billowing-cherry
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "billowing-cherry-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From billowing-cherry (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://hidden-meadow.ns-34.svc.cluster.local.:8080,http://ancient-wildflower.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billowing-cherry-v2
  namespace: ns-34
  labels:
    app: billowing-cherry
    version: v2
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: billowing-cherry
        version: v2
  template:
    metadata:
      labels:
        app: billowing-cherry
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: billowing-cherry
      containers:
      - name: billowing-cherry
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "billowing-cherry-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From billowing-cherry (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://hidden-meadow.ns-34.svc.cluster.local.:8080,http://ancient-wildflower.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billowing-cherry-v3
  namespace: ns-34
  labels:
    app: billowing-cherry
    version: v3
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: billowing-cherry
        version: v3
  template:
    metadata:
      labels:
        app: billowing-cherry
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: billowing-cherry
      containers:
      - name: billowing-cherry
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "billowing-cherry-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From billowing-cherry (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://hidden-meadow.ns-34.svc.cluster.local.:8080,http://ancient-wildflower.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cold-shadow
  namespace: ns-34
  labels:
    app: cold-shadow
    tier: "1"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: cold-shadow
  namespace: ns-34
  labels:
    app: cold-shadow
    tier: "1"
    seed: "1695849434450986000"
spec:
  selector:
    app: cold-shadow
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cold-shadow-v1
  namespace: ns-34
  labels:
    app: cold-shadow
    version: v1
    tier: "1"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cold-shadow
        version: v1
  template:
    metadata:
      labels:
        app: cold-shadow
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cold-shadow
      containers:
      - name: cold-shadow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cold-shadow-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cold-shadow (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://patient-dream.ns-34.svc.cluster.local.:8080,http://lingering-smoke.ns-34.svc.cluster.local.:8080,http://snowy-leaf.ns-34.svc.cluster.local.:8080,http://aged-wood.ns-36.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: damp-moon
  namespace: ns-34
  labels:
    app: damp-moon
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: damp-moon
  namespace: ns-34
  labels:
    app: damp-moon
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: damp-moon
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: damp-moon-v1
  namespace: ns-34
  labels:
    app: damp-moon
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: damp-moon
        version: v1
  template:
    metadata:
      labels:
        app: damp-moon
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: damp-moon
      containers:
      - name: damp-moon
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "damp-moon-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From damp-moon (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dawn-lake
  namespace: ns-34
  labels:
    app: dawn-lake
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: dawn-lake
  namespace: ns-34
  labels:
    app: dawn-lake
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: dawn-lake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawn-lake-v1
  namespace: ns-34
  labels:
    app: dawn-lake
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dawn-lake
        version: v1
  template:
    metadata:
      labels:
        app: dawn-lake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dawn-lake
      containers:
      - name: dawn-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dawn-lake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dawn-lake (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://young-snow.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawn-lake-v2
  namespace: ns-34
  labels:
    app: dawn-lake
    version: v2
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dawn-lake
        version: v2
  template:
    metadata:
      labels:
        app: dawn-lake
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dawn-lake
      containers:
      - name: dawn-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dawn-lake-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dawn-lake (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://young-snow.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: empty-wind
  namespace: ns-34
  labels:
    app: empty-wind
    tier: "5"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: empty-wind
  namespace: ns-34
  labels:
    app: empty-wind
    tier: "5"
    seed: "1695849434450986000"
spec:
  selector:
    app: empty-wind
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: empty-wind-v1
  namespace: ns-34
  labels:
    app: empty-wind
    version: v1
    tier: "5"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: empty-wind
        version: v1
  template:
    metadata:
      labels:
        app: empty-wind
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: empty-wind
      containers:
      - name: empty-wind
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "empty-wind-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From empty-wind (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hidden-meadow
  namespace: ns-34
  labels:
    app: hidden-meadow
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: hidden-meadow
  namespace: ns-34
  labels:
    app: hidden-meadow
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: hidden-meadow
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hidden-meadow-v1
  namespace: ns-34
  labels:
    app: hidden-meadow
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: hidden-meadow
        version: v1
  template:
    metadata:
      labels:
        app: hidden-meadow
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: hidden-meadow
      containers:
      - name: hidden-meadow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "hidden-meadow-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From hidden-meadow (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hidden-meadow-v2
  namespace: ns-34
  labels:
    app: hidden-meadow
    version: v2
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: hidden-meadow
        version: v2
  template:
    metadata:
      labels:
        app: hidden-meadow
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: hidden-meadow
      containers:
      - name: hidden-meadow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "hidden-meadow-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From hidden-meadow (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lingering-smoke
  namespace: ns-34
  labels:
    app: lingering-smoke
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: lingering-smoke
  namespace: ns-34
  labels:
    app: lingering-smoke
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: lingering-smoke
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lingering-smoke-v1
  namespace: ns-34
  labels:
    app: lingering-smoke
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: lingering-smoke
        version: v1
  template:
    metadata:
      labels:
        app: lingering-smoke
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: lingering-smoke
      containers:
      - name: lingering-smoke
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "lingering-smoke-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From lingering-smoke (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dawn-lake.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: misty-sunset
  namespace: ns-34
  labels:
    app: misty-sunset
    tier: "5"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: misty-sunset
  namespace: ns-34
  labels:
    app: misty-sunset
    tier: "5"
    seed: "1695849434450986000"
spec:
  selector:
    app: misty-sunset
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: misty-sunset-v1
  namespace: ns-34
  labels:
    app: misty-sunset
    version: v1
    tier: "5"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: misty-sunset
        version: v1
  template:
    metadata:
      labels:
        app: misty-sunset
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: misty-sunset
      containers:
      - name: misty-sunset
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "misty-sunset-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From misty-sunset (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: patient-dream
  namespace: ns-34
  labels:
    app: patient-dream
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: patient-dream
  namespace: ns-34
  labels:
    app: patient-dream
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: patient-dream
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: patient-dream-v1
  namespace: ns-34
  labels:
    app: patient-dream
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: patient-dream
        version: v1
  template:
    metadata:
      labels:
        app: patient-dream
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: patient-dream
      containers:
      - name: patient-dream
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "patient-dream-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From patient-dream (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://billowing-cherry.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snowy-leaf
  namespace: ns-34
  labels:
    app: snowy-leaf
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: snowy-leaf
  namespace: ns-34
  labels:
    app: snowy-leaf
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: snowy-leaf
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowy-leaf-v1
  namespace: ns-34
  labels:
    app: snowy-leaf
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: snowy-leaf
        version: v1
  template:
    metadata:
      labels:
        app: snowy-leaf
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: snowy-leaf
      containers:
      - name: snowy-leaf
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "snowy-leaf-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From snowy-leaf (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://damp-moon.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowy-leaf-v2
  namespace: ns-34
  labels:
    app: snowy-leaf
    version: v2
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: snowy-leaf
        version: v2
  template:
    metadata:
      labels:
        app: snowy-leaf
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: snowy-leaf
      containers:
      - name: snowy-leaf
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "snowy-leaf-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From snowy-leaf (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://damp-moon.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowy-leaf-v3
  namespace: ns-34
  labels:
    app: snowy-leaf
    version: v3
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: snowy-leaf
        version: v3
  template:
    metadata:
      labels:
        app: snowy-leaf
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: snowy-leaf
      containers:
      - name: snowy-leaf
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "snowy-leaf-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From snowy-leaf (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://damp-moon.ns-34.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: young-snow
  namespace: ns-34
  labels:
    app: young-snow
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: young-snow
  namespace: ns-34
  labels:
    app: young-snow
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: young-snow
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: young-snow-v1
  namespace: ns-34
  labels:
    app: young-snow
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: young-snow
        version: v1
  template:
    metadata:
      labels:
        app: young-snow
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: young-snow
      containers:
      - name: young-snow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "young-snow-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From young-snow (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---