
apiVersion: v1
kind: Namespace
metadata:
  name: ns-65
  labels:
    seed: "1695851930340087000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crimson-field
  namespace: ns-65
  labels:
    app: crimson-field
    tier: "3"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: crimson-field
  namespace: ns-65
  labels:
    app: crimson-field
    tier: "3"
    seed: "1695851930340087000"
spec:
  selector:
    app: crimson-field
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crimson-field-v1
  namespace: ns-65
  labels:
    app: crimson-field
    version: v1
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: crimson-field
        version: v1
  template:
    metadata:
      labels:
        app: crimson-field
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: crimson-field
      containers:
      - name: crimson-field
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "crimson-field-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From crimson-field (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://bold-shadow.ns-54.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: green-sky
  namespace: ns-65
  labels:
    app: green-sky
    tier: "3"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: green-sky
  namespace: ns-65
  labels:
    app: green-sky
    tier: "3"
    seed: "1695851930340087000"
spec:
  selector:
    app: green-sky
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: green-sky-v1
  namespace: ns-65
  labels:
    app: green-sky
    version: v1
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: green-sky
        version: v1
  template:
    metadata:
      labels:
        app: green-sky
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: green-sky
      containers:
      - name: green-sky
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "green-sky-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From green-sky (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://wild-lake.ns-65.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: late-rain
  namespace: ns-65
  labels:
    app: late-rain
    tier: "3"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: late-rain
  namespace: ns-65
  labels:
    app: late-rain
    tier: "3"
    seed: "1695851930340087000"
spec:
  selector:
    app: late-rain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: late-rain-v1
  namespace: ns-65
  labels:
    app: late-rain
    version: v1
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: late-rain
        version: v1
  template:
    metadata:
      labels:
        app: late-rain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: late-rain
      containers:
      - name: late-rain
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "late-rain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From late-rain (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: little-grass
  namespace: ns-65
  labels:
    app: little-grass
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: little-grass
  namespace: ns-65
  labels:
    app: little-grass
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: little-grass
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: little-grass-v1
  namespace: ns-65
  labels:
    app: little-grass
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: little-grass
        version: v1
  template:
    metadata:
      labels:
        app: little-grass
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: little-grass
      containers:
      - name: little-grass
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "little-grass-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From little-grass (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://crimson-field.ns-65.svc.cluster.local.:8080,http://late-rain.ns-65.svc.cluster.local.:8080,http://green-sky.ns-65.svc.cluster.local.:8080,http://spring-sound.ns-77.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-pine
  namespace: ns-65
  labels:
    app: spring-pine
    tier: "1"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: spring-pine
  namespace: ns-65
  labels:
    app: spring-pine
    tier: "1"
    seed: "1695851930340087000"
spec:
  selector:
    app: spring-pine
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-pine-v1
  namespace: ns-65
  labels:
    app: spring-pine
    version: v1
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: spring-pine
        version: v1
  template:
    metadata:
      labels:
        app: spring-pine
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: spring-pine
      containers:
      - name: spring-pine
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "spring-pine-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From spring-pine (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://summer-morning.ns-65.svc.cluster.local.:8080,http://little-grass.ns-65.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: summer-morning
  namespace: ns-65
  labels:
    app: summer-morning
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: summer-morning
  namespace: ns-65
  labels:
    app: summer-morning
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: summer-morning
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: summer-morning-v1
  namespace: ns-65
  labels:
    app: summer-morning
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: summer-morning
        version: v1
  template:
    metadata:
      labels:
        app: summer-morning
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: summer-morning
      containers:
      - name: summer-morning
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "summer-morning-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From summer-morning (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://frosty-snow.ns-6.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: summer-morning-v2
  namespace: ns-65
  labels:
    app: summer-morning
    version: v2
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: summer-morning
        version: v2
  template:
    metadata:
      labels:
        app: summer-morning
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: summer-morning
      containers:
      - name: summer-morning
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "summer-morning-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From summer-morning (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://frosty-snow.ns-6.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wild-lake
  namespace: ns-65
  labels:
    app: wild-lake
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: wild-lake
  namespace: ns-65
  labels:
    app: wild-lake
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: wild-lake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-lake-v1
  namespace: ns-65
  labels:
    app: wild-lake
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-lake
        version: v1
  template:
    metadata:
      labels:
        app: wild-lake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-lake
      containers:
      - name: wild-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-lake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-lake (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---