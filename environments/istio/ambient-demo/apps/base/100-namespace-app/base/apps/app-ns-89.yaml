
apiVersion: v1
kind: Namespace
metadata:
  name: ns-89
  labels:
    seed: "1695851930340087000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blue-sky
  namespace: ns-89
  labels:
    app: blue-sky
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: blue-sky
  namespace: ns-89
  labels:
    app: blue-sky
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: blue-sky
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue-sky-v1
  namespace: ns-89
  labels:
    app: blue-sky
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: blue-sky
        version: v1
  template:
    metadata:
      labels:
        app: blue-sky
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: blue-sky
      containers:
      - name: blue-sky
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "blue-sky-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From blue-sky (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://spring-shape.ns-27.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sparkling-feather
  namespace: ns-89
  labels:
    app: sparkling-feather
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: sparkling-feather
  namespace: ns-89
  labels:
    app: sparkling-feather
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: sparkling-feather
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparkling-feather-v1
  namespace: ns-89
  labels:
    app: sparkling-feather
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: sparkling-feather
        version: v1
  template:
    metadata:
      labels:
        app: sparkling-feather
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: sparkling-feather
      containers:
      - name: sparkling-feather
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "sparkling-feather-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From sparkling-feather (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://young-violet.ns-82.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wild-waterfall
  namespace: ns-89
  labels:
    app: wild-waterfall
    tier: "1"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: wild-waterfall
  namespace: ns-89
  labels:
    app: wild-waterfall
    tier: "1"
    seed: "1695851930340087000"
spec:
  selector:
    app: wild-waterfall
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-waterfall-v1
  namespace: ns-89
  labels:
    app: wild-waterfall
    version: v1
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-waterfall
        version: v1
  template:
    metadata:
      labels:
        app: wild-waterfall
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-waterfall
      containers:
      - name: wild-waterfall
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-waterfall-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-waterfall (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://blue-sky.ns-89.svc.cluster.local.:8080,http://young-river.ns-89.svc.cluster.local.:8080,http://sparkling-feather.ns-89.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-waterfall-v2
  namespace: ns-89
  labels:
    app: wild-waterfall
    version: v2
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-waterfall
        version: v2
  template:
    metadata:
      labels:
        app: wild-waterfall
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-waterfall
      containers:
      - name: wild-waterfall
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-waterfall-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-waterfall (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://blue-sky.ns-89.svc.cluster.local.:8080,http://young-river.ns-89.svc.cluster.local.:8080,http://sparkling-feather.ns-89.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-waterfall-v3
  namespace: ns-89
  labels:
    app: wild-waterfall
    version: v3
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-waterfall
        version: v3
  template:
    metadata:
      labels:
        app: wild-waterfall
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-waterfall
      containers:
      - name: wild-waterfall
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-waterfall-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-waterfall (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://blue-sky.ns-89.svc.cluster.local.:8080,http://young-river.ns-89.svc.cluster.local.:8080,http://sparkling-feather.ns-89.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: young-river
  namespace: ns-89
  labels:
    app: young-river
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: young-river
  namespace: ns-89
  labels:
    app: young-river
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: young-river
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: young-river-v1
  namespace: ns-89
  labels:
    app: young-river
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: young-river
        version: v1
  template:
    metadata:
      labels:
        app: young-river
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: young-river
      containers:
      - name: young-river
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "young-river-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From young-river (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---