
apiVersion: v1
kind: Namespace
metadata:
  name: ns-31
  labels:
    seed: "1695848925151071000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: broken-water
  namespace: ns-31
  labels:
    app: broken-water
    tier: "3"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: broken-water
  namespace: ns-31
  labels:
    app: broken-water
    tier: "3"
    seed: "1695848925151071000"
spec:
  selector:
    app: broken-water
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broken-water-v1
  namespace: ns-31
  labels:
    app: broken-water
    version: v1
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: broken-water
        version: v1
  template:
    metadata:
      labels:
        app: broken-water
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: broken-water
      containers:
      - name: broken-water
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "broken-water-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From broken-water (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://black-bird.ns-26.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broken-water-v2
  namespace: ns-31
  labels:
    app: broken-water
    version: v2
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: broken-water
        version: v2
  template:
    metadata:
      labels:
        app: broken-water
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: broken-water
      containers:
      - name: broken-water
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "broken-water-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From broken-water (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://black-bird.ns-26.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nameless-lake
  namespace: ns-31
  labels:
    app: nameless-lake
    tier: "1"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: nameless-lake
  namespace: ns-31
  labels:
    app: nameless-lake
    tier: "1"
    seed: "1695848925151071000"
spec:
  selector:
    app: nameless-lake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nameless-lake-v1
  namespace: ns-31
  labels:
    app: nameless-lake
    version: v1
    tier: "1"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: nameless-lake
        version: v1
  template:
    metadata:
      labels:
        app: nameless-lake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: nameless-lake
      containers:
      - name: nameless-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "nameless-lake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From nameless-lake (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://wild-pond.ns-31.svc.cluster.local.:8080,http://winter-night.ns-31.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shy-brook
  namespace: ns-31
  labels:
    app: shy-brook
    tier: "3"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: shy-brook
  namespace: ns-31
  labels:
    app: shy-brook
    tier: "3"
    seed: "1695848925151071000"
spec:
  selector:
    app: shy-brook
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shy-brook-v1
  namespace: ns-31
  labels:
    app: shy-brook
    version: v1
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: shy-brook
        version: v1
  template:
    metadata:
      labels:
        app: shy-brook
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: shy-brook
      containers:
      - name: shy-brook
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "shy-brook-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From shy-brook (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shy-brook-v2
  namespace: ns-31
  labels:
    app: shy-brook
    version: v2
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: shy-brook
        version: v2
  template:
    metadata:
      labels:
        app: shy-brook
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: shy-brook
      containers:
      - name: shy-brook
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "shy-brook-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From shy-brook (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wild-pond
  namespace: ns-31
  labels:
    app: wild-pond
    tier: "2"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: wild-pond
  namespace: ns-31
  labels:
    app: wild-pond
    tier: "2"
    seed: "1695848925151071000"
spec:
  selector:
    app: wild-pond
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-pond-v1
  namespace: ns-31
  labels:
    app: wild-pond
    version: v1
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-pond
        version: v1
  template:
    metadata:
      labels:
        app: wild-pond
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-pond
      containers:
      - name: wild-pond
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-pond-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-pond (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: winter-night
  namespace: ns-31
  labels:
    app: winter-night
    tier: "2"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: winter-night
  namespace: ns-31
  labels:
    app: winter-night
    tier: "2"
    seed: "1695848925151071000"
spec:
  selector:
    app: winter-night
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: winter-night-v1
  namespace: ns-31
  labels:
    app: winter-night
    version: v1
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: winter-night
        version: v1
  template:
    metadata:
      labels:
        app: winter-night
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: winter-night
      containers:
      - name: winter-night
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "winter-night-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From winter-night (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://broken-water.ns-31.svc.cluster.local.:8080,http://shy-brook.ns-31.svc.cluster.local.:8080,http://cold-bird.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: winter-night-v2
  namespace: ns-31
  labels:
    app: winter-night
    version: v2
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: winter-night
        version: v2
  template:
    metadata:
      labels:
        app: winter-night
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: winter-night
      containers:
      - name: winter-night
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "winter-night-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From winter-night (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://broken-water.ns-31.svc.cluster.local.:8080,http://shy-brook.ns-31.svc.cluster.local.:8080,http://cold-bird.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: winter-night-v3
  namespace: ns-31
  labels:
    app: winter-night
    version: v3
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: winter-night
        version: v3
  template:
    metadata:
      labels:
        app: winter-night
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: winter-night
      containers:
      - name: winter-night
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "winter-night-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From winter-night (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://broken-water.ns-31.svc.cluster.local.:8080,http://shy-brook.ns-31.svc.cluster.local.:8080,http://cold-bird.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---