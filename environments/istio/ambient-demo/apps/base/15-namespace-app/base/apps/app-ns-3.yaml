
apiVersion: v1
kind: Namespace
metadata:
  name: ns-3
  labels:
    seed: "1695844037132284000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: divine-water
  namespace: ns-3
  labels:
    app: divine-water
    tier: "1"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: divine-water
  namespace: ns-3
  labels:
    app: divine-water
    tier: "1"
    seed: "1695844037132284000"
spec:
  selector:
    app: divine-water
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-water-v1
  namespace: ns-3
  labels:
    app: divine-water
    version: v1
    tier: "1"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-water
        version: v1
  template:
    metadata:
      labels:
        app: divine-water
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-water
      containers:
      - name: divine-water
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-water-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-water (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://icy-paper.ns-3.svc.cluster.local.:8080,http://wild-pine.ns-3.svc.cluster.local.:8080,http://lively-sea.ns-3.svc.cluster.local.:8080,http://muddy-pine.ns-3.svc.cluster.local.:8080,http://silent-wave.ns-3.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frosty-snow
  namespace: ns-3
  labels:
    app: frosty-snow
    tier: "6"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: frosty-snow
  namespace: ns-3
  labels:
    app: frosty-snow
    tier: "6"
    seed: "1695844037132284000"
spec:
  selector:
    app: frosty-snow
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frosty-snow-v1
  namespace: ns-3
  labels:
    app: frosty-snow
    version: v1
    tier: "6"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: frosty-snow
        version: v1
  template:
    metadata:
      labels:
        app: frosty-snow
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: frosty-snow
      containers:
      - name: frosty-snow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "frosty-snow-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From frosty-snow (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: icy-paper
  namespace: ns-3
  labels:
    app: icy-paper
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: icy-paper
  namespace: ns-3
  labels:
    app: icy-paper
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: icy-paper
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icy-paper-v1
  namespace: ns-3
  labels:
    app: icy-paper
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: icy-paper
        version: v1
  template:
    metadata:
      labels:
        app: icy-paper
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: icy-paper
      containers:
      - name: icy-paper
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "icy-paper-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From icy-paper (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://shy-sky.ns-9.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icy-paper-v2
  namespace: ns-3
  labels:
    app: icy-paper
    version: v2
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: icy-paper
        version: v2
  template:
    metadata:
      labels:
        app: icy-paper
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: icy-paper
      containers:
      - name: icy-paper
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "icy-paper-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From icy-paper (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://shy-sky.ns-9.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: little-pond
  namespace: ns-3
  labels:
    app: little-pond
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: little-pond
  namespace: ns-3
  labels:
    app: little-pond
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: little-pond
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: little-pond-v1
  namespace: ns-3
  labels:
    app: little-pond
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: little-pond
        version: v1
  template:
    metadata:
      labels:
        app: little-pond
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: little-pond
      containers:
      - name: little-pond
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "little-pond-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From little-pond (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://restless-wave.ns-3.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lively-mountain
  namespace: ns-3
  labels:
    app: lively-mountain
    tier: "5"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: lively-mountain
  namespace: ns-3
  labels:
    app: lively-mountain
    tier: "5"
    seed: "1695844037132284000"
spec:
  selector:
    app: lively-mountain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lively-mountain-v1
  namespace: ns-3
  labels:
    app: lively-mountain
    version: v1
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: lively-mountain
        version: v1
  template:
    metadata:
      labels:
        app: lively-mountain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: lively-mountain
      containers:
      - name: lively-mountain
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "lively-mountain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From lively-mountain (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lively-sea
  namespace: ns-3
  labels:
    app: lively-sea
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: lively-sea
  namespace: ns-3
  labels:
    app: lively-sea
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: lively-sea
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lively-sea-v1
  namespace: ns-3
  labels:
    app: lively-sea
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: lively-sea
        version: v1
  template:
    metadata:
      labels:
        app: lively-sea
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: lively-sea
      containers:
      - name: lively-sea
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "lively-sea-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From lively-sea (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: muddy-pine
  namespace: ns-3
  labels:
    app: muddy-pine
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: muddy-pine
  namespace: ns-3
  labels:
    app: muddy-pine
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: muddy-pine
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: muddy-pine-v1
  namespace: ns-3
  labels:
    app: muddy-pine
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: muddy-pine
        version: v1
  template:
    metadata:
      labels:
        app: muddy-pine
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: muddy-pine
      containers:
      - name: muddy-pine
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "muddy-pine-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From muddy-pine (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://wild-bird.ns-3.svc.cluster.local.:8080,http://floral-dawn.ns-1.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-frost
  namespace: ns-3
  labels:
    app: purple-frost
    tier: "5"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-frost
  namespace: ns-3
  labels:
    app: purple-frost
    tier: "5"
    seed: "1695844037132284000"
spec:
  selector:
    app: purple-frost
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-frost-v1
  namespace: ns-3
  labels:
    app: purple-frost
    version: v1
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-frost
        version: v1
  template:
    metadata:
      labels:
        app: purple-frost
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-frost
      containers:
      - name: purple-frost
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-frost-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-frost (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://broken-surf.ns-11.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: red-voice
  namespace: ns-3
  labels:
    app: red-voice
    tier: "5"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: red-voice
  namespace: ns-3
  labels:
    app: red-voice
    tier: "5"
    seed: "1695844037132284000"
spec:
  selector:
    app: red-voice
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: red-voice-v1
  namespace: ns-3
  labels:
    app: red-voice
    version: v1
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: red-voice
        version: v1
  template:
    metadata:
      labels:
        app: red-voice
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: red-voice
      containers:
      - name: red-voice
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "red-voice-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From red-voice (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://purple-resonance.ns-14.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: restless-wave
  namespace: ns-3
  labels:
    app: restless-wave
    tier: "4"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: restless-wave
  namespace: ns-3
  labels:
    app: restless-wave
    tier: "4"
    seed: "1695844037132284000"
spec:
  selector:
    app: restless-wave
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restless-wave-v1
  namespace: ns-3
  labels:
    app: restless-wave
    version: v1
    tier: "4"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: restless-wave
        version: v1
  template:
    metadata:
      labels:
        app: restless-wave
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: restless-wave
      containers:
      - name: restless-wave
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "restless-wave-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From restless-wave (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://red-voice.ns-3.svc.cluster.local.:8080,http://purple-frost.ns-3.svc.cluster.local.:8080,http://lively-mountain.ns-3.svc.cluster.local.:8080,http://rough-forest.ns-3.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rough-forest
  namespace: ns-3
  labels:
    app: rough-forest
    tier: "5"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: rough-forest
  namespace: ns-3
  labels:
    app: rough-forest
    tier: "5"
    seed: "1695844037132284000"
spec:
  selector:
    app: rough-forest
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rough-forest-v1
  namespace: ns-3
  labels:
    app: rough-forest
    version: v1
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: rough-forest
        version: v1
  template:
    metadata:
      labels:
        app: rough-forest
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: rough-forest
      containers:
      - name: rough-forest
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "rough-forest-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From rough-forest (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://weathered-glitter.ns-14.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: silent-wave
  namespace: ns-3
  labels:
    app: silent-wave
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: silent-wave
  namespace: ns-3
  labels:
    app: silent-wave
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: silent-wave
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: silent-wave-v1
  namespace: ns-3
  labels:
    app: silent-wave
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: silent-wave
        version: v1
  template:
    metadata:
      labels:
        app: silent-wave
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: silent-wave
      containers:
      - name: silent-wave
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "silent-wave-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From silent-wave (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://wispy-snowflake.ns-3.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wild-bird
  namespace: ns-3
  labels:
    app: wild-bird
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: wild-bird
  namespace: ns-3
  labels:
    app: wild-bird
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: wild-bird
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-bird-v1
  namespace: ns-3
  labels:
    app: wild-bird
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-bird
        version: v1
  template:
    metadata:
      labels:
        app: wild-bird
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-bird
      containers:
      - name: wild-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-bird-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-bird (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-bird-v2
  namespace: ns-3
  labels:
    app: wild-bird
    version: v2
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-bird
        version: v2
  template:
    metadata:
      labels:
        app: wild-bird
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-bird
      containers:
      - name: wild-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-bird-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-bird (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-bird-v3
  namespace: ns-3
  labels:
    app: wild-bird
    version: v3
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-bird
        version: v3
  template:
    metadata:
      labels:
        app: wild-bird
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-bird
      containers:
      - name: wild-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-bird-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-bird (v3)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wild-pine
  namespace: ns-3
  labels:
    app: wild-pine
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: wild-pine
  namespace: ns-3
  labels:
    app: wild-pine
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: wild-pine
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wild-pine-v1
  namespace: ns-3
  labels:
    app: wild-pine
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wild-pine
        version: v1
  template:
    metadata:
      labels:
        app: wild-pine
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wild-pine
      containers:
      - name: wild-pine
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wild-pine-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wild-pine (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://little-pond.ns-3.svc.cluster.local.:8080,http://green-thunder.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wispy-snowflake
  namespace: ns-3
  labels:
    app: wispy-snowflake
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: wispy-snowflake
  namespace: ns-3
  labels:
    app: wispy-snowflake
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: wispy-snowflake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wispy-snowflake-v1
  namespace: ns-3
  labels:
    app: wispy-snowflake
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wispy-snowflake
        version: v1
  template:
    metadata:
      labels:
        app: wispy-snowflake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wispy-snowflake
      containers:
      - name: wispy-snowflake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wispy-snowflake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wispy-snowflake (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://summer-forest.ns-1.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wispy-snowflake-v2
  namespace: ns-3
  labels:
    app: wispy-snowflake
    version: v2
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wispy-snowflake
        version: v2
  template:
    metadata:
      labels:
        app: wispy-snowflake
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wispy-snowflake
      containers:
      - name: wispy-snowflake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wispy-snowflake-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wispy-snowflake (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://summer-forest.ns-1.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---