
apiVersion: v1
kind: Namespace
metadata:
  name: ns-13
  labels:
    seed: "1695844037132284000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: billowing-tree
  namespace: ns-13
  labels:
    app: billowing-tree
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: billowing-tree
  namespace: ns-13
  labels:
    app: billowing-tree
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: billowing-tree
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billowing-tree-v1
  namespace: ns-13
  labels:
    app: billowing-tree
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: billowing-tree
        version: v1
  template:
    metadata:
      labels:
        app: billowing-tree
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: billowing-tree
      containers:
      - name: billowing-tree
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "billowing-tree-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From billowing-tree (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bold-lake
  namespace: ns-13
  labels:
    app: bold-lake
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: bold-lake
  namespace: ns-13
  labels:
    app: bold-lake
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: bold-lake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bold-lake-v1
  namespace: ns-13
  labels:
    app: bold-lake
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: bold-lake
        version: v1
  template:
    metadata:
      labels:
        app: bold-lake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: bold-lake
      containers:
      - name: bold-lake
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "bold-lake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From bold-lake (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://crimson-darkness.ns-13.svc.cluster.local.:8080,http://billowing-tree.ns-13.svc.cluster.local.:8080,http://white-surf.ns-13.svc.cluster.local.:8080,http://frosty-bird.ns-13.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cold-surf
  namespace: ns-13
  labels:
    app: cold-surf
    tier: "1"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: cold-surf
  namespace: ns-13
  labels:
    app: cold-surf
    tier: "1"
    seed: "1695844037132284000"
spec:
  selector:
    app: cold-surf
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cold-surf-v1
  namespace: ns-13
  labels:
    app: cold-surf
    version: v1
    tier: "1"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cold-surf
        version: v1
  template:
    metadata:
      labels:
        app: cold-surf
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cold-surf
      containers:
      - name: cold-surf
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cold-surf-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cold-surf (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://bold-lake.ns-13.svc.cluster.local.:8080,http://shy-mountain.ns-13.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crimson-darkness
  namespace: ns-13
  labels:
    app: crimson-darkness
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: crimson-darkness
  namespace: ns-13
  labels:
    app: crimson-darkness
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: crimson-darkness
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crimson-darkness-v1
  namespace: ns-13
  labels:
    app: crimson-darkness
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: crimson-darkness
        version: v1
  template:
    metadata:
      labels:
        app: crimson-darkness
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: crimson-darkness
      containers:
      - name: crimson-darkness
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "crimson-darkness-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From crimson-darkness (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dawn-field.ns-13.svc.cluster.local.:8080,http://damp-dew.ns-6.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dawn-field
  namespace: ns-13
  labels:
    app: dawn-field
    tier: "4"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: dawn-field
  namespace: ns-13
  labels:
    app: dawn-field
    tier: "4"
    seed: "1695844037132284000"
spec:
  selector:
    app: dawn-field
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawn-field-v1
  namespace: ns-13
  labels:
    app: dawn-field
    version: v1
    tier: "4"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dawn-field
        version: v1
  template:
    metadata:
      labels:
        app: dawn-field
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dawn-field
      containers:
      - name: dawn-field
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dawn-field-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dawn-field (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://polished-pine.ns-13.svc.cluster.local.:8080,http://divine-sea.ns-13.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: divine-sea
  namespace: ns-13
  labels:
    app: divine-sea
    tier: "5"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: divine-sea
  namespace: ns-13
  labels:
    app: divine-sea
    tier: "5"
    seed: "1695844037132284000"
spec:
  selector:
    app: divine-sea
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-sea-v1
  namespace: ns-13
  labels:
    app: divine-sea
    version: v1
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-sea
        version: v1
  template:
    metadata:
      labels:
        app: divine-sea
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-sea
      containers:
      - name: divine-sea
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-sea-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-sea (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-sea-v2
  namespace: ns-13
  labels:
    app: divine-sea
    version: v2
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-sea
        version: v2
  template:
    metadata:
      labels:
        app: divine-sea
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-sea
      containers:
      - name: divine-sea
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-sea-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-sea (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-sea-v3
  namespace: ns-13
  labels:
    app: divine-sea
    version: v3
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-sea
        version: v3
  template:
    metadata:
      labels:
        app: divine-sea
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-sea
      containers:
      - name: divine-sea
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-sea-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-sea (v3)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frosty-bird
  namespace: ns-13
  labels:
    app: frosty-bird
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: frosty-bird
  namespace: ns-13
  labels:
    app: frosty-bird
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: frosty-bird
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frosty-bird-v1
  namespace: ns-13
  labels:
    app: frosty-bird
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: frosty-bird
        version: v1
  template:
    metadata:
      labels:
        app: frosty-bird
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: frosty-bird
      containers:
      - name: frosty-bird
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "frosty-bird-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From frosty-bird (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polished-pine
  namespace: ns-13
  labels:
    app: polished-pine
    tier: "5"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: polished-pine
  namespace: ns-13
  labels:
    app: polished-pine
    tier: "5"
    seed: "1695844037132284000"
spec:
  selector:
    app: polished-pine
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polished-pine-v1
  namespace: ns-13
  labels:
    app: polished-pine
    version: v1
    tier: "5"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: polished-pine
        version: v1
  template:
    metadata:
      labels:
        app: polished-pine
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: polished-pine
      containers:
      - name: polished-pine
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "polished-pine-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From polished-pine (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://wild-sea.ns-11.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shy-mountain
  namespace: ns-13
  labels:
    app: shy-mountain
    tier: "2"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: shy-mountain
  namespace: ns-13
  labels:
    app: shy-mountain
    tier: "2"
    seed: "1695844037132284000"
spec:
  selector:
    app: shy-mountain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shy-mountain-v1
  namespace: ns-13
  labels:
    app: shy-mountain
    version: v1
    tier: "2"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: shy-mountain
        version: v1
  template:
    metadata:
      labels:
        app: shy-mountain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: shy-mountain
      containers:
      - name: shy-mountain
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "shy-mountain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From shy-mountain (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://white-moon.ns-13.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: white-moon
  namespace: ns-13
  labels:
    app: white-moon
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: white-moon
  namespace: ns-13
  labels:
    app: white-moon
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: white-moon
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-moon-v1
  namespace: ns-13
  labels:
    app: white-moon
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-moon
        version: v1
  template:
    metadata:
      labels:
        app: white-moon
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-moon
      containers:
      - name: white-moon
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-moon-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-moon (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-moon-v2
  namespace: ns-13
  labels:
    app: white-moon
    version: v2
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-moon
        version: v2
  template:
    metadata:
      labels:
        app: white-moon
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-moon
      containers:
      - name: white-moon
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-moon-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-moon (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-moon-v3
  namespace: ns-13
  labels:
    app: white-moon
    version: v3
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-moon
        version: v3
  template:
    metadata:
      labels:
        app: white-moon
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-moon
      containers:
      - name: white-moon
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-moon-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-moon (v3)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: white-surf
  namespace: ns-13
  labels:
    app: white-surf
    tier: "3"
    seed: "1695844037132284000"
---
apiVersion: v1
kind: Service
metadata:
  name: white-surf
  namespace: ns-13
  labels:
    app: white-surf
    tier: "3"
    seed: "1695844037132284000"
spec:
  selector:
    app: white-surf
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-surf-v1
  namespace: ns-13
  labels:
    app: white-surf
    version: v1
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-surf
        version: v1
  template:
    metadata:
      labels:
        app: white-surf
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-surf
      containers:
      - name: white-surf
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-surf-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-surf (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://red-leaf.ns-14.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-surf-v2
  namespace: ns-13
  labels:
    app: white-surf
    version: v2
    tier: "3"
    seed: "1695844037132284000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-surf
        version: v2
  template:
    metadata:
      labels:
        app: white-surf
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-surf
      containers:
      - name: white-surf
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-surf-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-surf (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://red-leaf.ns-14.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---