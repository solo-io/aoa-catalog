
apiVersion: v1
kind: Namespace
metadata:
  name: ns-25
  labels:
    seed: "1695848925151071000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cold-surf
  namespace: ns-25
  labels:
    app: cold-surf
    tier: "3"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: cold-surf
  namespace: ns-25
  labels:
    app: cold-surf
    tier: "3"
    seed: "1695848925151071000"
spec:
  selector:
    app: cold-surf
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cold-surf-v1
  namespace: ns-25
  labels:
    app: cold-surf
    version: v1
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cold-surf
        version: v1
  template:
    metadata:
      labels:
        app: cold-surf
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cold-surf
      containers:
      - name: cold-surf
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cold-surf-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cold-surf (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://shy-mountain.ns-25.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: late-thunder
  namespace: ns-25
  labels:
    app: late-thunder
    tier: "2"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: late-thunder
  namespace: ns-25
  labels:
    app: late-thunder
    tier: "2"
    seed: "1695848925151071000"
spec:
  selector:
    app: late-thunder
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: late-thunder-v1
  namespace: ns-25
  labels:
    app: late-thunder
    version: v1
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: late-thunder
        version: v1
  template:
    metadata:
      labels:
        app: late-thunder
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: late-thunder
      containers:
      - name: late-thunder
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "late-thunder-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From late-thunder (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-resonance
  namespace: ns-25
  labels:
    app: purple-resonance
    tier: "1"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-resonance
  namespace: ns-25
  labels:
    app: purple-resonance
    tier: "1"
    seed: "1695848925151071000"
spec:
  selector:
    app: purple-resonance
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-resonance-v1
  namespace: ns-25
  labels:
    app: purple-resonance
    version: v1
    tier: "1"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-resonance
        version: v1
  template:
    metadata:
      labels:
        app: purple-resonance
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-resonance
      containers:
      - name: purple-resonance
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-resonance-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-resonance (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://weathered-glitter.ns-25.svc.cluster.local.:8080,http://late-thunder.ns-25.svc.cluster.local.:8080,http://still-paper.ns-25.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shy-mountain
  namespace: ns-25
  labels:
    app: shy-mountain
    tier: "4"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: shy-mountain
  namespace: ns-25
  labels:
    app: shy-mountain
    tier: "4"
    seed: "1695848925151071000"
spec:
  selector:
    app: shy-mountain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shy-mountain-v1
  namespace: ns-25
  labels:
    app: shy-mountain
    version: v1
    tier: "4"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: shy-mountain
        version: v1
  template:
    metadata:
      labels:
        app: shy-mountain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: shy-mountain
      containers:
      - name: shy-mountain
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "shy-mountain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From shy-mountain (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-shape
  namespace: ns-25
  labels:
    app: spring-shape
    tier: "3"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: spring-shape
  namespace: ns-25
  labels:
    app: spring-shape
    tier: "3"
    seed: "1695848925151071000"
spec:
  selector:
    app: spring-shape
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-shape-v1
  namespace: ns-25
  labels:
    app: spring-shape
    version: v1
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: spring-shape
        version: v1
  template:
    metadata:
      labels:
        app: spring-shape
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: spring-shape
      containers:
      - name: spring-shape
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "spring-shape-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From spring-shape (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://snowy-water.ns-11.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: still-paper
  namespace: ns-25
  labels:
    app: still-paper
    tier: "2"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: still-paper
  namespace: ns-25
  labels:
    app: still-paper
    tier: "2"
    seed: "1695848925151071000"
spec:
  selector:
    app: still-paper
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: still-paper-v1
  namespace: ns-25
  labels:
    app: still-paper
    version: v1
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: still-paper
        version: v1
  template:
    metadata:
      labels:
        app: still-paper
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: still-paper
      containers:
      - name: still-paper
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "still-paper-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From still-paper (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://cold-surf.ns-25.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: still-paper-v2
  namespace: ns-25
  labels:
    app: still-paper
    version: v2
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: still-paper
        version: v2
  template:
    metadata:
      labels:
        app: still-paper
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: still-paper
      containers:
      - name: still-paper
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "still-paper-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From still-paper (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://cold-surf.ns-25.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: weathered-glitter
  namespace: ns-25
  labels:
    app: weathered-glitter
    tier: "2"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: weathered-glitter
  namespace: ns-25
  labels:
    app: weathered-glitter
    tier: "2"
    seed: "1695848925151071000"
spec:
  selector:
    app: weathered-glitter
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weathered-glitter-v1
  namespace: ns-25
  labels:
    app: weathered-glitter
    version: v1
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: weathered-glitter
        version: v1
  template:
    metadata:
      labels:
        app: weathered-glitter
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: weathered-glitter
      containers:
      - name: weathered-glitter
        image: nicholasjackson/fake-service:v0.26.2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "weathered-glitter-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From weathered-glitter (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://spring-shape.ns-25.svc.cluster.local.:8080,http://snowy-cherry.ns-23.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---