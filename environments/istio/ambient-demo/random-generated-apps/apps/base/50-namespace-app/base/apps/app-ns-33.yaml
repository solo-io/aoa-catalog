
apiVersion: v1
kind: Namespace
metadata:
  name: ns-33
  labels:
    seed: "1695848925151071000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fragrant-dream
  namespace: ns-33
  labels:
    app: fragrant-dream
    tier: "5"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: fragrant-dream
  namespace: ns-33
  labels:
    app: fragrant-dream
    tier: "5"
    seed: "1695848925151071000"
spec:
  selector:
    app: fragrant-dream
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fragrant-dream-v1
  namespace: ns-33
  labels:
    app: fragrant-dream
    version: v1
    tier: "5"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: fragrant-dream
        version: v1
  template:
    metadata:
      labels:
        app: fragrant-dream
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: fragrant-dream
      containers:
      - name: fragrant-dream
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "fragrant-dream-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From fragrant-dream (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fragrant-tree
  namespace: ns-33
  labels:
    app: fragrant-tree
    tier: "1"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: fragrant-tree
  namespace: ns-33
  labels:
    app: fragrant-tree
    tier: "1"
    seed: "1695848925151071000"
spec:
  selector:
    app: fragrant-tree
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fragrant-tree-v1
  namespace: ns-33
  labels:
    app: fragrant-tree
    version: v1
    tier: "1"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: fragrant-tree
        version: v1
  template:
    metadata:
      labels:
        app: fragrant-tree
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: fragrant-tree
      containers:
      - name: fragrant-tree
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "fragrant-tree-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From fragrant-tree (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://old-frost.ns-33.svc.cluster.local.:8080,http://nameless-thunder.ns-11.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: morning-forest
  namespace: ns-33
  labels:
    app: morning-forest
    tier: "5"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: morning-forest
  namespace: ns-33
  labels:
    app: morning-forest
    tier: "5"
    seed: "1695848925151071000"
spec:
  selector:
    app: morning-forest
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: morning-forest-v1
  namespace: ns-33
  labels:
    app: morning-forest
    version: v1
    tier: "5"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: morning-forest
        version: v1
  template:
    metadata:
      labels:
        app: morning-forest
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: morning-forest
      containers:
      - name: morning-forest
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "morning-forest-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From morning-forest (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: old-frost
  namespace: ns-33
  labels:
    app: old-frost
    tier: "2"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: old-frost
  namespace: ns-33
  labels:
    app: old-frost
    tier: "2"
    seed: "1695848925151071000"
spec:
  selector:
    app: old-frost
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: old-frost-v1
  namespace: ns-33
  labels:
    app: old-frost
    version: v1
    tier: "2"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: old-frost
        version: v1
  template:
    metadata:
      labels:
        app: old-frost
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: old-frost
      containers:
      - name: old-frost
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "old-frost-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From old-frost (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://quiet-wind.ns-33.svc.cluster.local.:8080,http://damp-firefly.ns-44.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quiet-wind
  namespace: ns-33
  labels:
    app: quiet-wind
    tier: "3"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: quiet-wind
  namespace: ns-33
  labels:
    app: quiet-wind
    tier: "3"
    seed: "1695848925151071000"
spec:
  selector:
    app: quiet-wind
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiet-wind-v1
  namespace: ns-33
  labels:
    app: quiet-wind
    version: v1
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: quiet-wind
        version: v1
  template:
    metadata:
      labels:
        app: quiet-wind
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: quiet-wind
      containers:
      - name: quiet-wind
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "quiet-wind-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From quiet-wind (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://rough-morning.ns-33.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiet-wind-v2
  namespace: ns-33
  labels:
    app: quiet-wind
    version: v2
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: quiet-wind
        version: v2
  template:
    metadata:
      labels:
        app: quiet-wind
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: quiet-wind
      containers:
      - name: quiet-wind
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "quiet-wind-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From quiet-wind (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://rough-morning.ns-33.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiet-wind-v3
  namespace: ns-33
  labels:
    app: quiet-wind
    version: v3
    tier: "3"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: quiet-wind
        version: v3
  template:
    metadata:
      labels:
        app: quiet-wind
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: quiet-wind
      containers:
      - name: quiet-wind
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "quiet-wind-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From quiet-wind (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://rough-morning.ns-33.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rough-morning
  namespace: ns-33
  labels:
    app: rough-morning
    tier: "4"
    seed: "1695848925151071000"
---
apiVersion: v1
kind: Service
metadata:
  name: rough-morning
  namespace: ns-33
  labels:
    app: rough-morning
    tier: "4"
    seed: "1695848925151071000"
spec:
  selector:
    app: rough-morning
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rough-morning-v1
  namespace: ns-33
  labels:
    app: rough-morning
    version: v1
    tier: "4"
    seed: "1695848925151071000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: rough-morning
        version: v1
  template:
    metadata:
      labels:
        app: rough-morning
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: rough-morning
      containers:
      - name: rough-morning
        #image: nicholasjackson/fake-service:v0.26.2
        image: howardjohn/fake-service:25
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "rough-morning-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From rough-morning (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "1"
        - name: "TIMING_50_PERCENTILE"
          value: "0ms"
        - name: "TIMING_90_PERCENTILE"
          value: "0ms"
        - name: "TIMING_99_PERCENTILE"
          value: "0ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        - name: "HTTP_SERVER_KEEP_ALIVES"
          value: "true"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "true"
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
---