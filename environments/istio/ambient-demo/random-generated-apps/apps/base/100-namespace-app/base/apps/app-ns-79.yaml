
apiVersion: v1
kind: Namespace
metadata:
  name: ns-79
  labels:
    seed: "1695851930340087000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: autumn-morning
  namespace: ns-79
  labels:
    app: autumn-morning
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: autumn-morning
  namespace: ns-79
  labels:
    app: autumn-morning
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: autumn-morning
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autumn-morning-v1
  namespace: ns-79
  labels:
    app: autumn-morning
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: autumn-morning
        version: v1
  template:
    metadata:
      labels:
        app: autumn-morning
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: autumn-morning
      containers:
      - name: autumn-morning
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "autumn-morning-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From autumn-morning (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://white-moon.ns-79.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autumn-morning-v2
  namespace: ns-79
  labels:
    app: autumn-morning
    version: v2
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: autumn-morning
        version: v2
  template:
    metadata:
      labels:
        app: autumn-morning
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: autumn-morning
      containers:
      - name: autumn-morning
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "autumn-morning-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From autumn-morning (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://white-moon.ns-79.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autumn-morning-v3
  namespace: ns-79
  labels:
    app: autumn-morning
    version: v3
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: autumn-morning
        version: v3
  template:
    metadata:
      labels:
        app: autumn-morning
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: autumn-morning
      containers:
      - name: autumn-morning
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "autumn-morning-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From autumn-morning (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://white-moon.ns-79.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bold-dust
  namespace: ns-79
  labels:
    app: bold-dust
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: bold-dust
  namespace: ns-79
  labels:
    app: bold-dust
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: bold-dust
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bold-dust-v1
  namespace: ns-79
  labels:
    app: bold-dust
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: bold-dust
        version: v1
  template:
    metadata:
      labels:
        app: bold-dust
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: bold-dust
      containers:
      - name: bold-dust
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "bold-dust-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From bold-dust (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bold-dust-v2
  namespace: ns-79
  labels:
    app: bold-dust
    version: v2
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: bold-dust
        version: v2
  template:
    metadata:
      labels:
        app: bold-dust
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: bold-dust
      containers:
      - name: bold-dust
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "bold-dust-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From bold-dust (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bold-dust-v3
  namespace: ns-79
  labels:
    app: bold-dust
    version: v3
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: bold-dust
        version: v3
  template:
    metadata:
      labels:
        app: bold-dust
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: bold-dust
      containers:
      - name: bold-dust
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "bold-dust-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From bold-dust (v3)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dawn-dawn
  namespace: ns-79
  labels:
    app: dawn-dawn
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: dawn-dawn
  namespace: ns-79
  labels:
    app: dawn-dawn
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: dawn-dawn
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawn-dawn-v1
  namespace: ns-79
  labels:
    app: dawn-dawn
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dawn-dawn
        version: v1
  template:
    metadata:
      labels:
        app: dawn-dawn
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dawn-dawn
      containers:
      - name: dawn-dawn
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dawn-dawn-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dawn-dawn (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dry-sun
  namespace: ns-79
  labels:
    app: dry-sun
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: dry-sun
  namespace: ns-79
  labels:
    app: dry-sun
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: dry-sun
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-sun-v1
  namespace: ns-79
  labels:
    app: dry-sun
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-sun
        version: v1
  template:
    metadata:
      labels:
        app: dry-sun
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-sun
      containers:
      - name: dry-sun
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-sun-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-sun (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-feather
  namespace: ns-79
  labels:
    app: purple-feather
    tier: "5"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-feather
  namespace: ns-79
  labels:
    app: purple-feather
    tier: "5"
    seed: "1695851930340087000"
spec:
  selector:
    app: purple-feather
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-feather-v1
  namespace: ns-79
  labels:
    app: purple-feather
    version: v1
    tier: "5"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-feather
        version: v1
  template:
    metadata:
      labels:
        app: purple-feather
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-feather
      containers:
      - name: purple-feather
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-feather-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-feather (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-feather-v2
  namespace: ns-79
  labels:
    app: purple-feather
    version: v2
    tier: "5"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-feather
        version: v2
  template:
    metadata:
      labels:
        app: purple-feather
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-feather
      containers:
      - name: purple-feather
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-feather-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-feather (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shy-tree
  namespace: ns-79
  labels:
    app: shy-tree
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: shy-tree
  namespace: ns-79
  labels:
    app: shy-tree
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: shy-tree
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shy-tree-v1
  namespace: ns-79
  labels:
    app: shy-tree
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: shy-tree
        version: v1
  template:
    metadata:
      labels:
        app: shy-tree
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: shy-tree
      containers:
      - name: shy-tree
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "shy-tree-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From shy-tree (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: white-moon
  namespace: ns-79
  labels:
    app: white-moon
    tier: "3"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: white-moon
  namespace: ns-79
  labels:
    app: white-moon
    tier: "3"
    seed: "1695851930340087000"
spec:
  selector:
    app: white-moon
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-moon-v1
  namespace: ns-79
  labels:
    app: white-moon
    version: v1
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-moon
        version: v1
  template:
    metadata:
      labels:
        app: white-moon
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-moon
      containers:
      - name: white-moon
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-moon-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-moon (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dawn-dawn.ns-79.svc.cluster.local.:8080,http://bold-dust.ns-79.svc.cluster.local.:8080,http://shy-tree.ns-79.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-moon-v2
  namespace: ns-79
  labels:
    app: white-moon
    version: v2
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-moon
        version: v2
  template:
    metadata:
      labels:
        app: white-moon
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-moon
      containers:
      - name: white-moon
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-moon-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-moon (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://dawn-dawn.ns-79.svc.cluster.local.:8080,http://bold-dust.ns-79.svc.cluster.local.:8080,http://shy-tree.ns-79.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: white-snow
  namespace: ns-79
  labels:
    app: white-snow
    tier: "1"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: white-snow
  namespace: ns-79
  labels:
    app: white-snow
    tier: "1"
    seed: "1695851930340087000"
spec:
  selector:
    app: white-snow
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-snow-v1
  namespace: ns-79
  labels:
    app: white-snow
    version: v1
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-snow
        version: v1
  template:
    metadata:
      labels:
        app: white-snow
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-snow
      containers:
      - name: white-snow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-snow-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-snow (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dry-sun.ns-79.svc.cluster.local.:8080,http://autumn-morning.ns-79.svc.cluster.local.:8080,http://polished-frost.ns-55.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-snow-v2
  namespace: ns-79
  labels:
    app: white-snow
    version: v2
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-snow
        version: v2
  template:
    metadata:
      labels:
        app: white-snow
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-snow
      containers:
      - name: white-snow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-snow-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-snow (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://dry-sun.ns-79.svc.cluster.local.:8080,http://autumn-morning.ns-79.svc.cluster.local.:8080,http://polished-frost.ns-55.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---