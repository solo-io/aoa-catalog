
apiVersion: v1
kind: Namespace
metadata:
  name: ns-38
  labels:
    seed: "1695849508033661000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dawn-glade
  namespace: ns-38
  labels:
    app: dawn-glade
    tier: "4"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: dawn-glade
  namespace: ns-38
  labels:
    app: dawn-glade
    tier: "4"
    seed: "1695849508033661000"
spec:
  selector:
    app: dawn-glade
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawn-glade-v1
  namespace: ns-38
  labels:
    app: dawn-glade
    version: v1
    tier: "4"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dawn-glade
        version: v1
  template:
    metadata:
      labels:
        app: dawn-glade
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dawn-glade
      containers:
      - name: dawn-glade
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dawn-glade-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dawn-glade (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dawn-sun
  namespace: ns-38
  labels:
    app: dawn-sun
    tier: "3"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: dawn-sun
  namespace: ns-38
  labels:
    app: dawn-sun
    tier: "3"
    seed: "1695849508033661000"
spec:
  selector:
    app: dawn-sun
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawn-sun-v1
  namespace: ns-38
  labels:
    app: dawn-sun
    version: v1
    tier: "3"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dawn-sun
        version: v1
  template:
    metadata:
      labels:
        app: dawn-sun
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dawn-sun
      containers:
      - name: dawn-sun
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dawn-sun-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dawn-sun (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://still-wave.ns-38.svc.cluster.local.:8080,http://dawn-glade.ns-38.svc.cluster.local.:8080,http://still-violet.ns-4.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: divine-shape
  namespace: ns-38
  labels:
    app: divine-shape
    tier: "1"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: divine-shape
  namespace: ns-38
  labels:
    app: divine-shape
    tier: "1"
    seed: "1695849508033661000"
spec:
  selector:
    app: divine-shape
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-shape-v1
  namespace: ns-38
  labels:
    app: divine-shape
    version: v1
    tier: "1"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-shape
        version: v1
  template:
    metadata:
      labels:
        app: divine-shape
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-shape
      containers:
      - name: divine-shape
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-shape-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-shape (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://misty-cherry.ns-38.svc.cluster.local.:8080,http://sparkling-breeze.ns-38.svc.cluster.local.:8080,http://little-pond.ns-6.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-shape-v2
  namespace: ns-38
  labels:
    app: divine-shape
    version: v2
    tier: "1"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-shape
        version: v2
  template:
    metadata:
      labels:
        app: divine-shape
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-shape
      containers:
      - name: divine-shape
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-shape-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-shape (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://misty-cherry.ns-38.svc.cluster.local.:8080,http://sparkling-breeze.ns-38.svc.cluster.local.:8080,http://little-pond.ns-6.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dry-waterfall
  namespace: ns-38
  labels:
    app: dry-waterfall
    tier: "3"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: dry-waterfall
  namespace: ns-38
  labels:
    app: dry-waterfall
    tier: "3"
    seed: "1695849508033661000"
spec:
  selector:
    app: dry-waterfall
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-waterfall-v1
  namespace: ns-38
  labels:
    app: dry-waterfall
    version: v1
    tier: "3"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-waterfall
        version: v1
  template:
    metadata:
      labels:
        app: dry-waterfall
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-waterfall
      containers:
      - name: dry-waterfall
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-waterfall-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-waterfall (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: misty-cherry
  namespace: ns-38
  labels:
    app: misty-cherry
    tier: "2"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: misty-cherry
  namespace: ns-38
  labels:
    app: misty-cherry
    tier: "2"
    seed: "1695849508033661000"
spec:
  selector:
    app: misty-cherry
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: misty-cherry-v1
  namespace: ns-38
  labels:
    app: misty-cherry
    version: v1
    tier: "2"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: misty-cherry
        version: v1
  template:
    metadata:
      labels:
        app: misty-cherry
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: misty-cherry
      containers:
      - name: misty-cherry
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "misty-cherry-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From misty-cherry (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sparkling-breeze
  namespace: ns-38
  labels:
    app: sparkling-breeze
    tier: "2"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: sparkling-breeze
  namespace: ns-38
  labels:
    app: sparkling-breeze
    tier: "2"
    seed: "1695849508033661000"
spec:
  selector:
    app: sparkling-breeze
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparkling-breeze-v1
  namespace: ns-38
  labels:
    app: sparkling-breeze
    version: v1
    tier: "2"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: sparkling-breeze
        version: v1
  template:
    metadata:
      labels:
        app: sparkling-breeze
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: sparkling-breeze
      containers:
      - name: sparkling-breeze
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "sparkling-breeze-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From sparkling-breeze (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dawn-sun.ns-38.svc.cluster.local.:8080,http://dry-waterfall.ns-38.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparkling-breeze-v2
  namespace: ns-38
  labels:
    app: sparkling-breeze
    version: v2
    tier: "2"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: sparkling-breeze
        version: v2
  template:
    metadata:
      labels:
        app: sparkling-breeze
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: sparkling-breeze
      containers:
      - name: sparkling-breeze
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "sparkling-breeze-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From sparkling-breeze (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://dawn-sun.ns-38.svc.cluster.local.:8080,http://dry-waterfall.ns-38.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: still-wave
  namespace: ns-38
  labels:
    app: still-wave
    tier: "4"
    seed: "1695849508033661000"
---
apiVersion: v1
kind: Service
metadata:
  name: still-wave
  namespace: ns-38
  labels:
    app: still-wave
    tier: "4"
    seed: "1695849508033661000"
spec:
  selector:
    app: still-wave
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: still-wave-v1
  namespace: ns-38
  labels:
    app: still-wave
    version: v1
    tier: "4"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: still-wave
        version: v1
  template:
    metadata:
      labels:
        app: still-wave
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: still-wave
      containers:
      - name: still-wave
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "still-wave-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From still-wave (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://snowy-water.ns-11.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: still-wave-v2
  namespace: ns-38
  labels:
    app: still-wave
    version: v2
    tier: "4"
    seed: "1695849508033661000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: still-wave
        version: v2
  template:
    metadata:
      labels:
        app: still-wave
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: still-wave
      containers:
      - name: still-wave
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "still-wave-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From still-wave (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://snowy-water.ns-11.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---