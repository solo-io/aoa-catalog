
apiVersion: v1
kind: Namespace
metadata:
  name: ns-5
  labels:
    seed: "1695851827348614000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cold-bird
  namespace: ns-5
  labels:
    app: cold-bird
    tier: "2"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: cold-bird
  namespace: ns-5
  labels:
    app: cold-bird
    tier: "2"
    seed: "1695851827348614000"
spec:
  selector:
    app: cold-bird
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cold-bird-v1
  namespace: ns-5
  labels:
    app: cold-bird
    version: v1
    tier: "2"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cold-bird
        version: v1
  template:
    metadata:
      labels:
        app: cold-bird
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cold-bird
      containers:
      - name: cold-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cold-bird-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cold-bird (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://delicate-wildflower.ns-5.svc.cluster.local.:8080,http://morning-rain.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cold-bird-v2
  namespace: ns-5
  labels:
    app: cold-bird
    version: v2
    tier: "2"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: cold-bird
        version: v2
  template:
    metadata:
      labels:
        app: cold-bird
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: cold-bird
      containers:
      - name: cold-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "cold-bird-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From cold-bird (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://delicate-wildflower.ns-5.svc.cluster.local.:8080,http://morning-rain.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: delicate-wildflower
  namespace: ns-5
  labels:
    app: delicate-wildflower
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: delicate-wildflower
  namespace: ns-5
  labels:
    app: delicate-wildflower
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: delicate-wildflower
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delicate-wildflower-v1
  namespace: ns-5
  labels:
    app: delicate-wildflower
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: delicate-wildflower
        version: v1
  template:
    metadata:
      labels:
        app: delicate-wildflower
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: delicate-wildflower
      containers:
      - name: delicate-wildflower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "delicate-wildflower-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From delicate-wildflower (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://fragrant-silence.ns-5.svc.cluster.local.:8080,http://still-star.ns-70.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fragrant-silence
  namespace: ns-5
  labels:
    app: fragrant-silence
    tier: "4"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: fragrant-silence
  namespace: ns-5
  labels:
    app: fragrant-silence
    tier: "4"
    seed: "1695851827348614000"
spec:
  selector:
    app: fragrant-silence
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fragrant-silence-v1
  namespace: ns-5
  labels:
    app: fragrant-silence
    version: v1
    tier: "4"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: fragrant-silence
        version: v1
  template:
    metadata:
      labels:
        app: fragrant-silence
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: fragrant-silence
      containers:
      - name: fragrant-silence
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "fragrant-silence-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From fragrant-silence (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frosty-snow
  namespace: ns-5
  labels:
    app: frosty-snow
    tier: "2"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: frosty-snow
  namespace: ns-5
  labels:
    app: frosty-snow
    tier: "2"
    seed: "1695851827348614000"
spec:
  selector:
    app: frosty-snow
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frosty-snow-v1
  namespace: ns-5
  labels:
    app: frosty-snow
    version: v1
    tier: "2"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: frosty-snow
        version: v1
  template:
    metadata:
      labels:
        app: frosty-snow
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: frosty-snow
      containers:
      - name: frosty-snow
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "frosty-snow-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From frosty-snow (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://withered-wildflower.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: late-morning
  namespace: ns-5
  labels:
    app: late-morning
    tier: "4"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: late-morning
  namespace: ns-5
  labels:
    app: late-morning
    tier: "4"
    seed: "1695851827348614000"
spec:
  selector:
    app: late-morning
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: late-morning-v1
  namespace: ns-5
  labels:
    app: late-morning
    version: v1
    tier: "4"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: late-morning
        version: v1
  template:
    metadata:
      labels:
        app: late-morning
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: late-morning
      containers:
      - name: late-morning
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "late-morning-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From late-morning (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lively-sound
  namespace: ns-5
  labels:
    app: lively-sound
    tier: "4"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: lively-sound
  namespace: ns-5
  labels:
    app: lively-sound
    tier: "4"
    seed: "1695851827348614000"
spec:
  selector:
    app: lively-sound
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lively-sound-v1
  namespace: ns-5
  labels:
    app: lively-sound
    version: v1
    tier: "4"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: lively-sound
        version: v1
  template:
    metadata:
      labels:
        app: lively-sound
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: lively-sound
      containers:
      - name: lively-sound
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "lively-sound-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From lively-sound (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://divine-snowflake.ns-51.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: morning-rain
  namespace: ns-5
  labels:
    app: morning-rain
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: morning-rain
  namespace: ns-5
  labels:
    app: morning-rain
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: morning-rain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: morning-rain-v1
  namespace: ns-5
  labels:
    app: morning-rain
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: morning-rain
        version: v1
  template:
    metadata:
      labels:
        app: morning-rain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: morning-rain
      containers:
      - name: morning-rain
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "morning-rain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From morning-rain (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: morning-rain-v2
  namespace: ns-5
  labels:
    app: morning-rain
    version: v2
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: morning-rain
        version: v2
  template:
    metadata:
      labels:
        app: morning-rain
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: morning-rain
      containers:
      - name: morning-rain
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "morning-rain-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From morning-rain (v2)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-frost
  namespace: ns-5
  labels:
    app: purple-frost
    tier: "1"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-frost
  namespace: ns-5
  labels:
    app: purple-frost
    tier: "1"
    seed: "1695851827348614000"
spec:
  selector:
    app: purple-frost
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-frost-v1
  namespace: ns-5
  labels:
    app: purple-frost
    version: v1
    tier: "1"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-frost
        version: v1
  template:
    metadata:
      labels:
        app: purple-frost
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-frost
      containers:
      - name: purple-frost
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-frost-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-frost (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://cold-bird.ns-5.svc.cluster.local.:8080,http://frosty-snow.ns-5.svc.cluster.local.:8080,http://red-voice.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-frost-v2
  namespace: ns-5
  labels:
    app: purple-frost
    version: v2
    tier: "1"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-frost
        version: v2
  template:
    metadata:
      labels:
        app: purple-frost
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-frost
      containers:
      - name: purple-frost
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-frost-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-frost (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://cold-bird.ns-5.svc.cluster.local.:8080,http://frosty-snow.ns-5.svc.cluster.local.:8080,http://red-voice.ns-5.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: red-voice
  namespace: ns-5
  labels:
    app: red-voice
    tier: "2"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: red-voice
  namespace: ns-5
  labels:
    app: red-voice
    tier: "2"
    seed: "1695851827348614000"
spec:
  selector:
    app: red-voice
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: red-voice-v1
  namespace: ns-5
  labels:
    app: red-voice
    version: v1
    tier: "2"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: red-voice
        version: v1
  template:
    metadata:
      labels:
        app: red-voice
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: red-voice
      containers:
      - name: red-voice
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "red-voice-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From red-voice (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wispy-sky
  namespace: ns-5
  labels:
    app: wispy-sky
    tier: "5"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: wispy-sky
  namespace: ns-5
  labels:
    app: wispy-sky
    tier: "5"
    seed: "1695851827348614000"
spec:
  selector:
    app: wispy-sky
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wispy-sky-v1
  namespace: ns-5
  labels:
    app: wispy-sky
    version: v1
    tier: "5"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: wispy-sky
        version: v1
  template:
    metadata:
      labels:
        app: wispy-sky
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: wispy-sky
      containers:
      - name: wispy-sky
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "wispy-sky-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From wispy-sky (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: withered-wildflower
  namespace: ns-5
  labels:
    app: withered-wildflower
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: withered-wildflower
  namespace: ns-5
  labels:
    app: withered-wildflower
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: withered-wildflower
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: withered-wildflower-v1
  namespace: ns-5
  labels:
    app: withered-wildflower
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: withered-wildflower
        version: v1
  template:
    metadata:
      labels:
        app: withered-wildflower
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: withered-wildflower
      containers:
      - name: withered-wildflower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "withered-wildflower-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From withered-wildflower (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://late-morning.ns-5.svc.cluster.local.:8080,http://lively-sound.ns-5.svc.cluster.local.:8080,http://dark-meadow.ns-54.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: withered-wildflower-v2
  namespace: ns-5
  labels:
    app: withered-wildflower
    version: v2
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: withered-wildflower
        version: v2
  template:
    metadata:
      labels:
        app: withered-wildflower
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: withered-wildflower
      containers:
      - name: withered-wildflower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "withered-wildflower-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From withered-wildflower (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://late-morning.ns-5.svc.cluster.local.:8080,http://lively-sound.ns-5.svc.cluster.local.:8080,http://dark-meadow.ns-54.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: withered-wildflower-v3
  namespace: ns-5
  labels:
    app: withered-wildflower
    version: v3
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: withered-wildflower
        version: v3
  template:
    metadata:
      labels:
        app: withered-wildflower
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: withered-wildflower
      containers:
      - name: withered-wildflower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "withered-wildflower-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From withered-wildflower (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://late-morning.ns-5.svc.cluster.local.:8080,http://lively-sound.ns-5.svc.cluster.local.:8080,http://dark-meadow.ns-54.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---