
apiVersion: v1
kind: Namespace
metadata:
  name: ns-84
  labels:
    seed: "1695851827348614000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: damp-rain
  namespace: ns-84
  labels:
    app: damp-rain
    tier: "1"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: damp-rain
  namespace: ns-84
  labels:
    app: damp-rain
    tier: "1"
    seed: "1695851827348614000"
spec:
  selector:
    app: damp-rain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: damp-rain-v1
  namespace: ns-84
  labels:
    app: damp-rain
    version: v1
    tier: "1"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: damp-rain
        version: v1
  template:
    metadata:
      labels:
        app: damp-rain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: damp-rain
      containers:
      - name: damp-rain
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "damp-rain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From damp-rain (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://purple-rain.ns-84.svc.cluster.local.:8080,http://empty-bird.ns-27.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: divine-violet
  namespace: ns-84
  labels:
    app: divine-violet
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: divine-violet
  namespace: ns-84
  labels:
    app: divine-violet
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: divine-violet
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divine-violet-v1
  namespace: ns-84
  labels:
    app: divine-violet
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: divine-violet
        version: v1
  template:
    metadata:
      labels:
        app: divine-violet
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: divine-violet
      containers:
      - name: divine-violet
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "divine-violet-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From divine-violet (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: holy-forest
  namespace: ns-84
  labels:
    app: holy-forest
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: holy-forest
  namespace: ns-84
  labels:
    app: holy-forest
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: holy-forest
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: holy-forest-v1
  namespace: ns-84
  labels:
    app: holy-forest
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: holy-forest
        version: v1
  template:
    metadata:
      labels:
        app: holy-forest
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: holy-forest
      containers:
      - name: holy-forest
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "holy-forest-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From holy-forest (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: misty-waterfall
  namespace: ns-84
  labels:
    app: misty-waterfall
    tier: "3"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: misty-waterfall
  namespace: ns-84
  labels:
    app: misty-waterfall
    tier: "3"
    seed: "1695851827348614000"
spec:
  selector:
    app: misty-waterfall
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: misty-waterfall-v1
  namespace: ns-84
  labels:
    app: misty-waterfall
    version: v1
    tier: "3"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: misty-waterfall
        version: v1
  template:
    metadata:
      labels:
        app: misty-waterfall
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: misty-waterfall
      containers:
      - name: misty-waterfall
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "misty-waterfall-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From misty-waterfall (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-rain
  namespace: ns-84
  labels:
    app: purple-rain
    tier: "2"
    seed: "1695851827348614000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-rain
  namespace: ns-84
  labels:
    app: purple-rain
    tier: "2"
    seed: "1695851827348614000"
spec:
  selector:
    app: purple-rain
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-rain-v1
  namespace: ns-84
  labels:
    app: purple-rain
    version: v1
    tier: "2"
    seed: "1695851827348614000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-rain
        version: v1
  template:
    metadata:
      labels:
        app: purple-rain
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-rain
      containers:
      - name: purple-rain
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-rain-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-rain (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://misty-waterfall.ns-84.svc.cluster.local.:8080,http://holy-forest.ns-84.svc.cluster.local.:8080,http://divine-violet.ns-84.svc.cluster.local.:8080,http://purple-resonance.ns-25.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---