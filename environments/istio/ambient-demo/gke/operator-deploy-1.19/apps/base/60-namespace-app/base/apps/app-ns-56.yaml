
apiVersion: v1
kind: Namespace
metadata:
  name: ns-56
  labels:
    seed: "1695849434450986000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aged-wood
  namespace: ns-56
  labels:
    app: aged-wood
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: aged-wood
  namespace: ns-56
  labels:
    app: aged-wood
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: aged-wood
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aged-wood-v1
  namespace: ns-56
  labels:
    app: aged-wood
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: aged-wood
        version: v1
  template:
    metadata:
      labels:
        app: aged-wood
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: aged-wood
      containers:
      - name: aged-wood
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "aged-wood-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From aged-wood (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: billowing-moon
  namespace: ns-56
  labels:
    app: billowing-moon
    tier: "1"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: billowing-moon
  namespace: ns-56
  labels:
    app: billowing-moon
    tier: "1"
    seed: "1695849434450986000"
spec:
  selector:
    app: billowing-moon
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billowing-moon-v1
  namespace: ns-56
  labels:
    app: billowing-moon
    version: v1
    tier: "1"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: billowing-moon
        version: v1
  template:
    metadata:
      labels:
        app: billowing-moon
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: billowing-moon
      containers:
      - name: billowing-moon
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "billowing-moon-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From billowing-moon (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://shy-fire.ns-56.svc.cluster.local.:8080,http://bold-flower.ns-56.svc.cluster.local.:8080,http://weathered-dawn.ns-56.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blue-field
  namespace: ns-56
  labels:
    app: blue-field
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: blue-field
  namespace: ns-56
  labels:
    app: blue-field
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: blue-field
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue-field-v1
  namespace: ns-56
  labels:
    app: blue-field
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: blue-field
        version: v1
  template:
    metadata:
      labels:
        app: blue-field
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: blue-field
      containers:
      - name: blue-field
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "blue-field-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From blue-field (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bold-flower
  namespace: ns-56
  labels:
    app: bold-flower
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: bold-flower
  namespace: ns-56
  labels:
    app: bold-flower
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: bold-flower
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bold-flower-v1
  namespace: ns-56
  labels:
    app: bold-flower
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: bold-flower
        version: v1
  template:
    metadata:
      labels:
        app: bold-flower
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: bold-flower
      containers:
      - name: bold-flower
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "bold-flower-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From bold-flower (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://winter-waterfall.ns-56.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dry-brook
  namespace: ns-56
  labels:
    app: dry-brook
    tier: "5"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: dry-brook
  namespace: ns-56
  labels:
    app: dry-brook
    tier: "5"
    seed: "1695849434450986000"
spec:
  selector:
    app: dry-brook
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-brook-v1
  namespace: ns-56
  labels:
    app: dry-brook
    version: v1
    tier: "5"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-brook
        version: v1
  template:
    metadata:
      labels:
        app: dry-brook
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-brook
      containers:
      - name: dry-brook
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-brook-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-brook (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dry-frog
  namespace: ns-56
  labels:
    app: dry-frog
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: dry-frog
  namespace: ns-56
  labels:
    app: dry-frog
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: dry-frog
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-frog-v1
  namespace: ns-56
  labels:
    app: dry-frog
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-frog
        version: v1
  template:
    metadata:
      labels:
        app: dry-frog
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-frog
      containers:
      - name: dry-frog
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-frog-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-frog (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shy-fire
  namespace: ns-56
  labels:
    app: shy-fire
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: shy-fire
  namespace: ns-56
  labels:
    app: shy-fire
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: shy-fire
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shy-fire-v1
  namespace: ns-56
  labels:
    app: shy-fire
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: shy-fire
        version: v1
  template:
    metadata:
      labels:
        app: shy-fire
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: shy-fire
      containers:
      - name: shy-fire
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "shy-fire-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From shy-fire (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://weathered-water.ns-56.svc.cluster.local.:8080,http://lively-wave.ns-37.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: weathered-dawn
  namespace: ns-56
  labels:
    app: weathered-dawn
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: weathered-dawn
  namespace: ns-56
  labels:
    app: weathered-dawn
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: weathered-dawn
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weathered-dawn-v1
  namespace: ns-56
  labels:
    app: weathered-dawn
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: weathered-dawn
        version: v1
  template:
    metadata:
      labels:
        app: weathered-dawn
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: weathered-dawn
      containers:
      - name: weathered-dawn
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "weathered-dawn-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From weathered-dawn (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dry-frog.ns-56.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: weathered-water
  namespace: ns-56
  labels:
    app: weathered-water
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: weathered-water
  namespace: ns-56
  labels:
    app: weathered-water
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: weathered-water
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weathered-water-v1
  namespace: ns-56
  labels:
    app: weathered-water
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: weathered-water
        version: v1
  template:
    metadata:
      labels:
        app: weathered-water
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: weathered-water
      containers:
      - name: weathered-water
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "weathered-water-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From weathered-water (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: winter-waterfall
  namespace: ns-56
  labels:
    app: winter-waterfall
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: winter-waterfall
  namespace: ns-56
  labels:
    app: winter-waterfall
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: winter-waterfall
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: winter-waterfall-v1
  namespace: ns-56
  labels:
    app: winter-waterfall
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: winter-waterfall
        version: v1
  template:
    metadata:
      labels:
        app: winter-waterfall
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: winter-waterfall
      containers:
      - name: winter-waterfall
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "winter-waterfall-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From winter-waterfall (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://aged-wood.ns-56.svc.cluster.local.:8080,http://blue-field.ns-56.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---