
apiVersion: v1
kind: Namespace
metadata:
  name: ns-24
  labels:
    seed: "1695849434450986000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bold-sun
  namespace: ns-24
  labels:
    app: bold-sun
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: bold-sun
  namespace: ns-24
  labels:
    app: bold-sun
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: bold-sun
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bold-sun-v1
  namespace: ns-24
  labels:
    app: bold-sun
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: bold-sun
        version: v1
  template:
    metadata:
      labels:
        app: bold-sun
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: bold-sun
      containers:
      - name: bold-sun
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "bold-sun-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From bold-sun (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: late-thunder
  namespace: ns-24
  labels:
    app: late-thunder
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: late-thunder
  namespace: ns-24
  labels:
    app: late-thunder
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: late-thunder
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: late-thunder-v1
  namespace: ns-24
  labels:
    app: late-thunder
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: late-thunder
        version: v1
  template:
    metadata:
      labels:
        app: late-thunder
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: late-thunder
      containers:
      - name: late-thunder
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "late-thunder-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From late-thunder (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: purple-resonance
  namespace: ns-24
  labels:
    app: purple-resonance
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: purple-resonance
  namespace: ns-24
  labels:
    app: purple-resonance
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: purple-resonance
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: purple-resonance-v1
  namespace: ns-24
  labels:
    app: purple-resonance
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: purple-resonance
        version: v1
  template:
    metadata:
      labels:
        app: purple-resonance
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: purple-resonance
      containers:
      - name: purple-resonance
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "purple-resonance-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From purple-resonance (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://weathered-glitter.ns-24.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quiet-star
  namespace: ns-24
  labels:
    app: quiet-star
    tier: "1"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: quiet-star
  namespace: ns-24
  labels:
    app: quiet-star
    tier: "1"
    seed: "1695849434450986000"
spec:
  selector:
    app: quiet-star
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiet-star-v1
  namespace: ns-24
  labels:
    app: quiet-star
    version: v1
    tier: "1"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: quiet-star
        version: v1
  template:
    metadata:
      labels:
        app: quiet-star
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: quiet-star
      containers:
      - name: quiet-star
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "quiet-star-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From quiet-star (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://red-leaf.ns-24.svc.cluster.local.:8080,http://bold-sun.ns-24.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: red-leaf
  namespace: ns-24
  labels:
    app: red-leaf
    tier: "2"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: red-leaf
  namespace: ns-24
  labels:
    app: red-leaf
    tier: "2"
    seed: "1695849434450986000"
spec:
  selector:
    app: red-leaf
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: red-leaf-v1
  namespace: ns-24
  labels:
    app: red-leaf
    version: v1
    tier: "2"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: red-leaf
        version: v1
  template:
    metadata:
      labels:
        app: red-leaf
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: red-leaf
      containers:
      - name: red-leaf
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "red-leaf-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From red-leaf (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://still-paper.ns-24.svc.cluster.local.:8080,http://purple-resonance.ns-24.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: still-paper
  namespace: ns-24
  labels:
    app: still-paper
    tier: "3"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: still-paper
  namespace: ns-24
  labels:
    app: still-paper
    tier: "3"
    seed: "1695849434450986000"
spec:
  selector:
    app: still-paper
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: still-paper-v1
  namespace: ns-24
  labels:
    app: still-paper
    version: v1
    tier: "3"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: still-paper
        version: v1
  template:
    metadata:
      labels:
        app: still-paper
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: still-paper
      containers:
      - name: still-paper
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "still-paper-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From still-paper (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://late-thunder.ns-24.svc.cluster.local.:8080,http://floral-resonance.ns-27.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: weathered-glitter
  namespace: ns-24
  labels:
    app: weathered-glitter
    tier: "4"
    seed: "1695849434450986000"
---
apiVersion: v1
kind: Service
metadata:
  name: weathered-glitter
  namespace: ns-24
  labels:
    app: weathered-glitter
    tier: "4"
    seed: "1695849434450986000"
spec:
  selector:
    app: weathered-glitter
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weathered-glitter-v1
  namespace: ns-24
  labels:
    app: weathered-glitter
    version: v1
    tier: "4"
    seed: "1695849434450986000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: weathered-glitter
        version: v1
  template:
    metadata:
      labels:
        app: weathered-glitter
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: weathered-glitter
      containers:
      - name: weathered-glitter
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "weathered-glitter-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From weathered-glitter (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---