
apiVersion: v1
kind: Namespace
metadata:
  name: ns-15
  labels:
    seed: "1695851930340087000"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ancient-lake
  namespace: ns-15
  labels:
    app: ancient-lake
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: ancient-lake
  namespace: ns-15
  labels:
    app: ancient-lake
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: ancient-lake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ancient-lake-v1
  namespace: ns-15
  labels:
    app: ancient-lake
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: ancient-lake
        version: v1
  template:
    metadata:
      labels:
        app: ancient-lake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: ancient-lake
      containers:
      - name: ancient-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "ancient-lake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From ancient-lake (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dry-lake
  namespace: ns-15
  labels:
    app: dry-lake
    tier: "3"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: dry-lake
  namespace: ns-15
  labels:
    app: dry-lake
    tier: "3"
    seed: "1695851930340087000"
spec:
  selector:
    app: dry-lake
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-lake-v1
  namespace: ns-15
  labels:
    app: dry-lake
    version: v1
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-lake
        version: v1
  template:
    metadata:
      labels:
        app: dry-lake
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-lake
      containers:
      - name: dry-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-lake-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-lake (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://ancient-lake.ns-15.svc.cluster.local.:8080,http://fragrant-lake.ns-19.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-lake-v2
  namespace: ns-15
  labels:
    app: dry-lake
    version: v2
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-lake
        version: v2
  template:
    metadata:
      labels:
        app: dry-lake
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-lake
      containers:
      - name: dry-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-lake-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-lake (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://ancient-lake.ns-15.svc.cluster.local.:8080,http://fragrant-lake.ns-19.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dry-lake-v3
  namespace: ns-15
  labels:
    app: dry-lake
    version: v3
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: dry-lake
        version: v3
  template:
    metadata:
      labels:
        app: dry-lake
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: dry-lake
      containers:
      - name: dry-lake
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "dry-lake-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From dry-lake (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://ancient-lake.ns-15.svc.cluster.local.:8080,http://fragrant-lake.ns-19.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frosty-sunset
  namespace: ns-15
  labels:
    app: frosty-sunset
    tier: "3"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: frosty-sunset
  namespace: ns-15
  labels:
    app: frosty-sunset
    tier: "3"
    seed: "1695851930340087000"
spec:
  selector:
    app: frosty-sunset
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frosty-sunset-v1
  namespace: ns-15
  labels:
    app: frosty-sunset
    version: v1
    tier: "3"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: frosty-sunset
        version: v1
  template:
    metadata:
      labels:
        app: frosty-sunset
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: frosty-sunset
      containers:
      - name: frosty-sunset
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "frosty-sunset-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From frosty-sunset (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://long-moon.ns-15.svc.cluster.local.:8080,http://icy-surf.ns-15.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: icy-surf
  namespace: ns-15
  labels:
    app: icy-surf
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: icy-surf
  namespace: ns-15
  labels:
    app: icy-surf
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: icy-surf
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icy-surf-v1
  namespace: ns-15
  labels:
    app: icy-surf
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: icy-surf
        version: v1
  template:
    metadata:
      labels:
        app: icy-surf
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: icy-surf
      containers:
      - name: icy-surf
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "icy-surf-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From icy-surf (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: long-moon
  namespace: ns-15
  labels:
    app: long-moon
    tier: "4"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: long-moon
  namespace: ns-15
  labels:
    app: long-moon
    tier: "4"
    seed: "1695851930340087000"
spec:
  selector:
    app: long-moon
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: long-moon-v1
  namespace: ns-15
  labels:
    app: long-moon
    version: v1
    tier: "4"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: long-moon
        version: v1
  template:
    metadata:
      labels:
        app: long-moon
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: long-moon
      containers:
      - name: long-moon
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "long-moon-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From long-moon (v1)!"
        - name: "UPSTREAM_URIS"
          value: ""
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snowy-fog
  namespace: ns-15
  labels:
    app: snowy-fog
    tier: "1"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: snowy-fog
  namespace: ns-15
  labels:
    app: snowy-fog
    tier: "1"
    seed: "1695851930340087000"
spec:
  selector:
    app: snowy-fog
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowy-fog-v1
  namespace: ns-15
  labels:
    app: snowy-fog
    version: v1
    tier: "1"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: snowy-fog
        version: v1
  template:
    metadata:
      labels:
        app: snowy-fog
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: snowy-fog
      containers:
      - name: snowy-fog
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "snowy-fog-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From snowy-fog (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://white-bird.ns-15.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: white-bird
  namespace: ns-15
  labels:
    app: white-bird
    tier: "2"
    seed: "1695851930340087000"
---
apiVersion: v1
kind: Service
metadata:
  name: white-bird
  namespace: ns-15
  labels:
    app: white-bird
    tier: "2"
    seed: "1695851930340087000"
spec:
  selector:
    app: white-bird
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-bird-v1
  namespace: ns-15
  labels:
    app: white-bird
    version: v1
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-bird
        version: v1
  template:
    metadata:
      labels:
        app: white-bird
        version: v1
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-bird
      containers:
      - name: white-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-bird-v1"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-bird (v1)!"
        - name: "UPSTREAM_URIS"
          value: "http://dry-lake.ns-15.svc.cluster.local.:8080,http://frosty-sunset.ns-15.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-bird-v2
  namespace: ns-15
  labels:
    app: white-bird
    version: v2
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-bird
        version: v2
  template:
    metadata:
      labels:
        app: white-bird
        version: v2
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-bird
      containers:
      - name: white-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-bird-v2"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-bird (v2)!"
        - name: "UPSTREAM_URIS"
          value: "http://dry-lake.ns-15.svc.cluster.local.:8080,http://frosty-sunset.ns-15.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: white-bird-v3
  namespace: ns-15
  labels:
    app: white-bird
    version: v3
    tier: "2"
    seed: "1695851930340087000"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: white-bird
        version: v3
  template:
    metadata:
      labels:
        app: white-bird
        version: v3
      annotations:
        sidecar.istio.io/proxyMemoryLimit: "1Gi"
        sidecar.istio.io/proxyCPULimit: "2"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPU: "100m"
    spec:
      serviceAccountName: white-bird
      containers:
      - name: white-bird
        image: ghcr.io/nmnellis/fake-service:v2
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 1001
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "NAME"
          value: "white-bird-v3"
        - name: "SERVER_TYPE"
          value: "http"
        - name: "MESSAGE"
          value: "Hello From white-bird (v3)!"
        - name: "UPSTREAM_URIS"
          value: "http://dry-lake.ns-15.svc.cluster.local.:8080,http://frosty-sunset.ns-15.svc.cluster.local.:8080"
        - name: "UPSTREAM_WORKERS"
          value: "10"
        - name: "TIMING_50_PERCENTILE"
          value: "5ms"
        - name: "TIMING_90_PERCENTILE"
          value: "10ms"
        - name: "TIMING_99_PERCENTILE"
          value: "20ms"
        - name: "HTTP_CLIENT_REQUEST_TIMEOUT"
          value: "30s"
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
---