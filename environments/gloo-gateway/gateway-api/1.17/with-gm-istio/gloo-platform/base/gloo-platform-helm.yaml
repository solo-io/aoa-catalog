apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gloo-platform-helm
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io/solo-io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
  project: default
  source:
    chart: gloo-platform
    helm:
      skipCrds: true
      values: |
        featureGates:
            insightsConfiguration: true
        common:
            addonNamespace: "gloo-mesh-addons"
            adminNamespace: "gloo-mesh"
            cluster: mgmt
        glooInsightsEngine:
            enabled: true
        glooAnalyzer:
            enabled: true
            runAsSidecar: true
        global: {}
        glooAgent:
            enabled: true
            relay:
                serverAddress: gloo-mesh-mgmt-server:9900
                clientTlsSecret:
                    name: gloo-agent-tls-cert
                    namespace: gloo-mesh
                # required to set to null in 2.4.x if providing server and client tls certificates
                tokenSecret:
                  key: null
                  name: null
                  namespace: null
        glooMgmtServer:
            enabled: true
            relay:
                disableCa: true
                disableCaCertGeneration: true
                disableTokenGeneration: true
                tlsSecret:
                    name: gloo-server-tls-cert
            serviceType: LoadBalancer
        glooUi:
            auth:
                backend: oidc
                enabled: false
                oidc:
                    appUrl: https://gmui.glootest.com/gmui
                    clientId: 0oa5zoq0xoGKtOSpg5d7
                    clientSecret: _MS9PJ52NpUJo8Hj2nE4zj90hX4BFkW61SdaXJfE
                    clientSecretName: dashboard
                    issuerUrl: https://dev-22653158.okta.com/oauth2/default
            # uncomment to inject the Gloo UI with the Istio sidecar
            #deploymentOverrides:
            #    spec:
            #        template:
            #            metadata:
            #                annotations:
            #                    proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
            #                labels:
            #                    istio.io/rev: 1-23
            #                    sidecar.istio.io/inject: "true"
            enabled: true
            serviceType: ClusterIP
        extAuthService:
            enabled: false
            extAuth:
                apiKeyStorage:
                    enabled: true
                    # Use the local gloo-mesh-addons Redis for backing storage
                    name: redis
                    config:
                      connection:
                        host: "redis.gloo-mesh-addons:6379"
                        # Set to 0 to match the default database for the 'glooPortalServer.apiKeyStorage' configuration
                        db: 0
                    # Replace with a random string to use to generate hash values for other keys
                    secretKey: "xyz987"
        rateLimiter:
            enabled: false
        legacyMetricsPipeline:
            enabled: false
        licensing:
            licenseSecretName: "gloo-license"
        prometheus:
            enabled: true
        redis:
            deployment:
                enabled: true
        telemetryGateway:
            enabled: true
            #image:
            #  pullPolicy: IfNotPresent
            #  repository: gcr.io/gloo-mesh/gloo-otel-collector
            #  tag: 2.7.0-beta0-2024-10-25-puertomontt-gg-license-00b7def340
        telemetryCollector:
            enabled: true
            mode: deployment
            replicaCount: 1
            #image:
            #  pullPolicy: IfNotPresent
            #  repository: gcr.io/gloo-mesh/gloo-otel-collector
            #  tag: 2.7.0-beta0-2024-10-25-puertomontt-gg-license-00b7def340
            config:
                exporters:
                    otlp:
                        endpoint: "gloo-telemetry-gateway.gloo-mesh.svc.cluster.local:4317"
            extraVolumes:
                - name: root-ca
                  secret:
                    defaultMode: 420
                    secretName: gloo-telemetry-gateway-tls-secret
                - configMap:
                    items:
                        - key: relay
                          path: relay.yaml
                    name: gloo-telemetry-collector-config
                  name: telemetry-configmap
                - hostPath:
                    path: /var/run/cilium
                    type: DirectoryOrCreate
                  name: cilium-run
        telemetryGatewayCustomization:
            disableCertGeneration: true
            extraPipelines:
                metrics/gloo-mgmt:
                    exporters:
                        - prometheus
                    processors:
                        - memory_limiter
                        - batch
                    receivers:
                        - prometheus/gloo-mgmt
                metrics/gloo-gateway:
                    receivers: [prometheus/gloo-dataplane, prometheus/gloo-controlplane]
                    processors: [batch]
                    exporters: [prometheus]
            extraReceivers:
                prometheus/gloo-dataplane:
                    config:
                        scrape_configs:
                        # Scrape the Gloo Gateway pods
                        - job_name: gloo-gateways
                          honor_labels: true
                          kubernetes_sd_configs:
                          - role: pod
                          relabel_configs:
                            - action: keep
                              regex: kube-gateway
                              source_labels:
                              - __meta_kubernetes_pod_label_gloo
                            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                              action: keep
                              regex: true
                            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                              action: replace
                              target_label: __metrics_path__
                              regex: (.+)
                            - action: replace
                              source_labels:
                              - __meta_kubernetes_pod_ip
                              - __meta_kubernetes_pod_annotation_prometheus_io_port
                              separator: ':'
                              target_label: __address__
                            - action: labelmap
                              regex: __meta_kubernetes_pod_label_(.+)
                            - source_labels: [__meta_kubernetes_namespace]
                              action: replace
                              target_label: kube_namespace
                            - source_labels: [__meta_kubernetes_pod_name]
                              action: replace
                              target_label: pod
                prometheus/gloo-controlplane:
                    config:
                        scrape_configs:
                        # Scrape the Gloo pods
                        - job_name: gloo-gateways
                          honor_labels: true
                          kubernetes_sd_configs:
                          - role: pod
                          relabel_configs:
                            - action: keep
                              regex: gloo
                              source_labels:
                              - __meta_kubernetes_pod_label_gloo
                            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                              action: keep
                              regex: true
                            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                              action: replace
                              target_label: __metrics_path__
                              regex: (.+)
                            - action: replace
                              source_labels:
                              - __meta_kubernetes_pod_ip
                              - __meta_kubernetes_pod_annotation_prometheus_io_port
                              separator: ':'
                              target_label: __address__
                            - action: labelmap
                              regex: __meta_kubernetes_pod_label_(.+)
                            - source_labels: [__meta_kubernetes_namespace]
                              action: replace
                              target_label: kube_namespace
                            - source_labels: [__meta_kubernetes_pod_name]
                              action: replace
                              target_label: pod
                prometheus/gloo-mgmt:
                    config:
                        scrape_configs:
                            - honor_labels: true
                              job_name: gloo-mesh-mgmt-server-otel
                              kubernetes_sd_configs:
                                - namespaces:
                                    names:
                                        - gloo-mesh
                                  role: pod
                              relabel_configs:
                                - action: keep
                                  regex: gloo-mesh-mgmt-server|gloo-mesh-ui
                                  source_labels:
                                    - __meta_kubernetes_pod_label_app
                                - action: keep
                                  regex: true
                                  source_labels:
                                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                                - action: drop
                                  regex: true
                                  source_labels:
                                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
                                - action: replace
                                  regex: (https?)
                                  source_labels:
                                    - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                                  target_label: __scheme__
                                - action: replace
                                  regex: (.+)
                                  source_labels:
                                    - __meta_kubernetes_pod_annotation_prometheus_io_path
                                  target_label: __metrics_path__
                                - action: replace
                                  regex: ([^:]+)(?::\d+)?;(\d+)
                                  replacement: $$1:$$2
                                  source_labels:
                                    - __address__
                                    - __meta_kubernetes_pod_annotation_prometheus_io_port
                                  target_label: __address__
                                - action: labelmap
                                  regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                                  replacement: __param_$$1
                                - action: labelmap
                                  regex: __meta_kubernetes_pod_label_(.+)
                                - action: replace
                                  source_labels:
                                    - __meta_kubernetes_namespace
                                  target_label: namespace
                                - action: replace
                                  source_labels:
                                    - __meta_kubernetes_pod_name
                                  target_label: pod
                                - action: drop
                                  regex: Pending|Succeeded|Failed|Completed
                                  source_labels:
                                    - __meta_kubernetes_pod_phase

    repoURL: https://storage.googleapis.com/gloo-platform-dev/platform-charts/helm-charts
    targetRevision: 2.7.0-beta0-2024-10-25-puertomontt-gg-license-00b7def340
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  # ignore the self-signed certs that are being generated automatically    
  ignoreDifferences:
  - group: v1
    kind: Secret
