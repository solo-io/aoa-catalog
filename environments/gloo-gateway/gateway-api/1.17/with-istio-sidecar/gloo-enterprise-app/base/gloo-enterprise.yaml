apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gloo-edge-enterprise-helm
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io/solo-io
spec:
  destination:
    namespace: gloo-system
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: gloo-ee
    helm:
      skipCrds: false
      values: |
        create_license_secret: false
        gloo:
          license_secret_name: license
          kubeGateway:
            # Enable K8s Gateway integration
            enabled: true
            gatewayParameters:
              glooGateway:
                istio:
                  istioProxyContainer:
                    istioDiscoveryAddress: istiod-1-23.istio-system.svc:15012
                    istioMetaClusterId: Kubernetes
                    istioMetaMeshId: Kubernetes
          gatewayProxies:
            gatewayProxy:
              disabled: true
              healthyPanicThreshold: 0
              gatewaySettings:
                # Disable the default Edge Gateway CRs from being created
                enabled: false
                disableGeneratedGateways: true
              service:
                type: ClusterIP
          gateway:
            persistProxySpec: true
            logLevel: info
            validation:
              allowWarnings: true
              alwaysAcceptResources: false
          gloo:
            logLevel: info
            # To simplify the demo, we disable any features that are affected by leader election
            # In Gloo Gateway, this is just status reporting, but still we do this to be safe
            disableLeaderElection: true
            deployment:
              replicas: 1
              customEnv:
                # The portal plugin is disabled by default, so must explicitly enable it
                - name: GG_PORTAL_PLUGIN
                  value: "true"
              livenessProbeEnabled: true
          discovery:
            # We don't need the discovery deployment for our Gloo Gateway demo
            enabled: false
          rbac:
            namespaced: true
            nameSuffix: gg-demo
          settings:
            # Expose the Control Plane Admin API (port 10010 on Gloo)
            devMode: true
        observability:
          enabled: true
        prometheus:
          # setting to false will disable prometheus, removing it from Gloo's chart dependencies
          enabled: true
        grafana:
          # setting to false will disable grafana, removing it from Gloo's chart dependencies
          defaultInstallationEnabled: true
          grafana.ini:
            auth.anonymous:
              enabled: true
            server:
              root_url: https://*/grafana/
              serve_from_sub_path: true
        # This demo does not deal with Gloo Federation, so we disable the components to simplify the installation
        gloo-fed:
          enabled: false
          create_license_secret: false
          glooFedApiserver:
            enable: false
        gateway-portal-web-server:
          # Enable the sub-chart for the Portal webserver
          enabled: true
        global:
          istioIntegration:
            enableAutoMtls: true
            enabled: true
          istioSDS:
            enabled: true
          extensions:
            # Rate-Limit Configuration
            rateLimit:
              enabled: true
              deployment:
                logLevel: debug
            # Ext-Auth Configuration
            extAuth:
              enabled: true
              requestTimeout: 5s
              deployment:
                logLevel: debug
    repoURL: https://storage.googleapis.com/gloo-ee-test-helm
    targetRevision: 1.18.0-beta2-bmain-4f950f1
  syncPolicy:
    automated:
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).