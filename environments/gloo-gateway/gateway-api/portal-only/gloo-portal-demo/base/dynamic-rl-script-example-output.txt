% ./dynamic-rl-script.sh 
Step 1: Setting up authentication tokens...
Tokens set.

Enter the API base URL for the portal server backend (e.g., https://api.glootest.com): https://api.glootest.com
-------------------------
Step 1 complete. Press enter to proceed to Step 2...

Step 2: Creating a user...
curl -X PUT https://api.glootest.com/v1/me -H 'Authorization: Bearer $DEV_USER_AUTH_TOKEN'

User created with ID: a52cf6b6-c222-469b-9304-dd25f31dcf53

-------------------------
Step 2 complete. Press enter to proceed to Step 3...
Choose a team name or enter a custom one:
1) Engineering
2) Marketing
3) Sales
4) Custom
#? 1
Choose a team description or enter a custom one:
1) The engineering team  3) The sales team
2) The marketing team    4) Custom
#? 1

Team created with ID: de5d4e16-256f-47bc-8b51-624be49eaccc

-------------------------
Step 3 complete. Press enter to proceed to Step 4...
Choose an application name or enter a custom one:
1) TestApp1
2) DemoApp
3) ProdApp
4) Custom
#? 1
Choose an application description or enter a custom one:
1) App for testing   3) Production app
2) Demo application  4) Custom
#? 1

Application created with ID: 75629c06-dc4c-4d07-b123-d1537f630c40

-------------------------
Step 4 complete. Press enter to proceed to Step 5...

Step 5: Listing available API products...
curl -X GET https://api.glootest.com/v1/api-products -H 'Authorization: Bearer $DEV_USER_AUTH_TOKEN'

Available API Products:
1) Catstronauts Course Tracks (ID: b8165a8d-2c5a-48f7-bbe5-eb634bbfad1a)

Please select an API product by number (1 to 1): 1
Selected API Product ID: b8165a8d-2c5a-48f7-bbe5-eb634bbfad1a

-------------------------
Step 5 complete. Press enter to proceed to Step 6...

Step 6: Creating a subscription to the API product...
curl -X POST https://api.glootest.com/v1/apps/$APPLICATION_ID/subscriptions -H 'Content-Type: application/json' -H 'Authorization: Bearer $DEV_USER_AUTH_TOKEN' -d '{"ApiProductId": "b8165a8d-2c5a-48f7-bbe5-eb634bbfad1a"}'

Full subscription response: 
HTTP Status: 201

Subscription created successfully, but no response body. Skipping subscription ID extraction.
Discovering subscription ID by listing subscriptions...
curl -X GET https://api.glootest.com/v1/apps/$APPLICATION_ID/subscriptions -H 'Authorization: Bearer $DEV_USER_AUTH_TOKEN'

Subscription ID: 69b532ef-a082-444b-a616-fbe7fd7c3f08

-------------------------
Step 6 complete. Press enter to proceed to Step 7...

Step 7: Approving subscription...
curl -X POST https://api.glootest.com/v1/subscriptions/$SUBSCRIPTION_ID/approve -H 'Authorization: Bearer $ADMIN_USER_AUTH_TOKEN'

Subscription approved.

-------------------------
Step 7 complete. Press enter to proceed to Step 8...

Step 8: Setting a dynamic rate limit for the subscription...
Enter the number of requests per minute: 7
Applying rate limit of 7 requests per MINUTE to subscription 69b532ef-a082-444b-a616-fbe7fd7c3f08...

Rate limit applied. Note that the time unit is configurable, but for this demo, it's set to MINUTE.
-------------------------
Step 8 complete. Press enter to proceed to Step 9...
Choose an API key name or enter a custom one:
1) TestKey
2) ProdKey
3) DevKey
4) Custom
#? 1

API Key created: 0a3c69a0-639c-4926-bb07-5063c8b4baa6
API Key ID: 1714fc31-c1fb-4a4a-b21d-99d6e6b7a42c

-------------------------
Step 9 complete. Press enter to proceed to Step 10...

Step 10: Validating the API key...
1) tracks              3) gloo-portal-server  5) Custom
2) petstore            4) openlibrary
#? 1
Selected API Product ID: tracks

curl -X GET https://api.glootest.com/v1/metadata?apiKey=$API_KEY&apiProductId=$API_PRODUCT_ID
{"allowed":true,"customMetadata":{"key2":"value2"},"rateLimit":{"requestsPerUnit":"7","unit":"MINUTE"}}

-------------------------
Step 10 complete. Press enter to proceed to Step 11...

Step 11: Choose an API product's URI or enter a custom one:
1) https://tracks.glootest.com/tracks/c_0
2) https://petstore.glootest.com/pets/pet
3) https://api.glootest.com/v1/api-products
4) https://openlibrary.glootest.com/api/books?bibkeys=ISBN%3A0201558025&format=json&jscmd=viewapi
5) Custom
#? 1
Selected API Product URI: https://tracks.glootest.com/tracks/c_0

-------------------------
Step 11 complete. Press enter to proceed to Step 12...

Calling the API product's endpoint without the API key (expecting 403)...
Rejected
Expecting a Rejected - 403 error.

-------------------------
Step 12 complete. Press enter to proceed to Step 13...

Step 13: Calling the API product's endpoint with the API key (expecting 200 responses until rate limit is hit)...
curl https://tracks.glootest.com/tracks/c_0 -H 'api-key: $API_KEY'
Attempt 1:
HTTP Status Code: 200
-------------------------
Attempt 2:
HTTP Status Code: 200
-------------------------
Attempt 3:
HTTP Status Code: 200
-------------------------
Attempt 4:
HTTP Status Code: 200
-------------------------
Attempt 5:
HTTP Status Code: 200
-------------------------
Attempt 6:
HTTP Status Code: 200
-------------------------
Attempt 7:
HTTP Status Code: 200
-------------------------
Attempt 8:
HTTP Status Code: 429
-------------------------
Expecting dynamic rate limiting after attempt 8.

-------------------------
Step 13 complete. Press enter to proceed to Step 14...

Step 14: Revoking the API key...

curl -X DELETE https://api.glootest.com/v1/api-keys/$API_KEY_ID -H 'Authorization: Bearer $DEV_USER_AUTH_TOKEN' -H 'User-Agent: curl/8.9.0' -H 'Accept: */*'

API Key revoked successfully. HTTP Status: 204

-------------------------
Step 14 complete. Press enter to proceed to Step 15...

Step 15: Calling the API product's endpoint with the revoked API key (expecting 403)...
curl https://tracks.glootest.com/tracks/c_0 -H 'api-key: $API_KEY'
Rejected

Expecting a Rejected - 403 error.

-------------------------
All operations completed successfully!