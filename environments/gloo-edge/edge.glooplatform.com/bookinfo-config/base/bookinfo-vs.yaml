apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: bookinfo-vs
  namespace: gloo-system
spec:
  sslConfig:
    secretRef:
      name: cf-advanced-tls-secret
      namespace: gloo-system
  virtualHost:
    domains:
    - 'bookinfo.edge.glooplatform.com'
    routes:
    - matchers:
      - prefix: /
      routeAction:
        multi:
          destinations:
          - destination:
              upstream:
                name: bookinfo-v1-productpage-9080
                namespace: gloo-system
            weight: 5
          - destination:
              upstream:
                name: bookinfo-v2-productpage-9080
                namespace: gloo-system
            weight: 5
    options:
      extauth:
        configRef:
          name: apikey-auth
          namespace: gloo-system
      waf:
        configMapRuleSets:
           - configMapRef:
               name: wafrulesets
               namespace: gloo-system
        #coreRuleSet:
        #  customSettingsString: |
        #      # default rules section
        #      SecRuleEngine On
        #      SecRequestBodyAccess On
        #      # CRS section
        #      # Will block by default
        #      SecDefaultAction "phase:1,log,auditlog,deny,status:403"
        #      SecDefaultAction "phase:2,log,auditlog,deny,status:403"

        #      # Deny when a semi-colon is found in the 'ip' parameter
        #      SecRule ARGS:ip ";" "t:none,log,deny,msg:'semi-colon detected in ip parameter',id:2"

        #      # block incoming request if argument `?param1=test`
        #      SecRule ARGS:param1 "test" "id:1,deny,msg:'failed test - param1=test'"

        #      # block incoming request if header is set to User-Agent: scammer
        #      SecRule REQUEST_HEADERS:User-Agent "scammer" "deny,status:403,id:107,phase:1,msg:'blocked scammer'"

        #      # allow only letters in username
        #      SecRule ARGS:/username/ "[^a-zA-Z]" "t:none,phase:2,deny,id:6,log,msg:'allow only letters in username'"

        #      # block incoming requests that do not match the ip below
        #      #SecRule REMOTE_ADDR "!@ipMatch 173.175.0.0/16" "phase:1,deny,status:403,id:1,msg:'block ip'"

        #      # only allow http2 connections
        #      SecAction \
        #        "id:900230,\
        #          phase:1,\
        #          nolog,\
        #          pass,\
        #          t:none,\
        #          setvar:'tx.allowed_http_versions=HTTP/2 HTTP/2.0'"
        #      
        #      # -- [[ End of setup ]] --------------------------------------------------------
        #      # The CRS checks the tx.crs_setup_version variable to ensure that the setup
        #      # has been loaded. If you are not planning to use this setup template,
        #      # you must manually set the tx.crs_setup_version variable before including
        #      # the CRS rules/* files.
        #      # The variable is a numerical representation of the CRS version number.
        #      # E.g., v3.0.0 is represented as 300.
        #      SecAction \
        #      "id:900990,\
        #        phase:1,\
        #        nolog,\
        #        pass,\
        #        t:none,\
        #            setvar:tx.crs_setup_version=310"   
        customInterventionMessage: 'ModSecurity intervention! Custom message details here..'