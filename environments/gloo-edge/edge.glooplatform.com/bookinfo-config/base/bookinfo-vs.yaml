apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: bookinfo-vs
  namespace: gloo-system
spec:
  sslConfig:
    secretRef:
      name: cf-advanced-tls-secret
      namespace: gloo-system
  virtualHost:
    domains:
    - 'bookinfo.edge.glooplatform.com'
    routes:
    - matchers:
      - prefix: /
      routeAction:
        multi:
          destinations:
          - destination:
              upstream:
                name: bookinfo-v1-productpage-9080
                namespace: gloo-system
            weight: 5
          - destination:
              upstream:
                name: bookinfo-v2-productpage-9080
                namespace: gloo-system
            weight: 5
    options:
      extauth:
        configRef:
          name: apikey-auth
          namespace: gloo-system
      waf:
        auditLogging:
          action: ALWAYS
          location: FILTER_STATE
        coreRuleSet:
          customSettingsString: |
            SecRuleEngine On
            SecRequestBodyAccess On
            SecDefaultAction "phase:1,log,auditlog,pass,status:403"
            SecDefaultAction "phase:2,log,auditlog,pass,status:403"

            SecRule ARGS:ip ";" "t:none,log,deny,msg:'semi-colon detected in ip parameter',id:2"
            SecRule ARGS:param1 "test" "id:1,deny,msg:'failed test - param1=test'"
            SecRule REQUEST_HEADERS:User-Agent "scammer" "deny,status:403,id:107,phase:1,msg:'blocked scammer'"

            SecAction \
              "id:900230, \
               phase:1, \
               nolog, \
               pass, \
               t:none, \
               setvar:'tx.allowed_http_versions=HTTP/2 HTTP/2.0'"
            SecRule ARGS:/username/ "[^a-zA-Z]" "t:none,phase:2,deny,id:6,log,msg:'allow only letters in username'"

            SecAction \
            "id:900990, \
              phase:1, \
              nolog, \
              pass, \
              t:none, \
              setvar:tx.crs_setup_version=310"
          customInterventionMessage: >-
            ModSecurity intervention! Please check access logs for more details: kubectl -n gloo-system logs deploy/gateway-proxy -f
